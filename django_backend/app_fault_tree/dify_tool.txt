openapi: 3.1.0
info:
  title: Get All Table Names and Comments
  description: Retrieves all table names and comments from a specified database instance and schema.
  version: v1.0.0
servers:
  - url: http://172.20.10.2:8000
paths:
  /api/fault_tree/v1/get_all_table_names_and_comments/:
    post:
      description: Get all table names and comments for a specific database instance and schema.
      operationId: GetAllTableNamesAndComments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_name:
                  type: string
                  description: The database instance name (e.g., "82.156.146.51_3306").
                  example: "82.156.146.51_3306"
                schema_name:
                  type: string
                  description: The schema name to retrieve the table information from (e.g., "cloud4db").
                  example: "cloud4db"
      responses:
        '200':
          description: Successful response with table names and comments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        TABLE_NAME:
                          type: string
                          example: "auth_group"
                        TABLE_COMMENT:
                          type: string
                          example: "数据库集群信息表"
                  message:
                    type: string
                    example: "获取库中所有表名和表备注成功"
                  code:
                    type: integer
                    example: 200
        '400':
          description: Bad request, invalid parameters.
        '500':
          description: Internal server error.
components:
  schemas: {}





openapi: 3.1.0
info:
  title: Get Table Structures
  description: Retrieves the structure of specified tables from a database instance and schema.
  version: v1.0.0
servers:
  - url: http://172.20.10.2:8000
paths:
  /api/fault_tree/v1/get_table_structures/:
    post:
      description: Get the structure of specified tables for a specific database instance and schema.
      operationId: GetTableStructures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instance_name:
                  type: string
                  description: The database instance name (e.g., "82.156.146.51_3306").
                  example: "82.156.146.51_3306"
                schema_name:
                  type: string
                  description: The schema name to retrieve the table structure from (e.g., "cloud4db").
                  example: "cloud4db"
                table_names:
                  type: string
                  description: The name of the table(s) to retrieve the structure for (e.g., "auth_group,mysql_cluster").
                  example: "auth_group,mysql_cluster"
      responses:
        '200':
          description: Successful response with table structure.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  data:
                    type: string
                    example: "CREATE TABLE `auth_group` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(150) NOT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `name` (`name`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8"
                  message:
                    type: string
                    example: "获取库中所有表名和表备注成功"
                  code:
                    type: integer
                    example: 200
        '400':
          description: Bad request, invalid parameters.
        '500':
          description: Internal server error.
components:
  schemas: {}






























你是一位高级数据库专家，擅长SQL编写
# 用户输入
- 数据库实例地址：{{#1747796290742.instance_name#}}
- 数据库库名: {{#1747796290742.schema_name#}}
- 用户选择的表名: {{#1747796290742.tables#}}
# 回答用户问题之前先明确用户的意图是查询业务数据、数据库元数据、问候类场景再依据场景要步骤求进行回复

# 查询业务数据场景
## 处理流程
- 用户未提供表名流程
1.使用工具获取所有表名，然后依选择与用户问头相关联的表名
2.用工具获取对应表名的表结构
3.依据工具获取的表结构回答用户问题
- 用户提供表名流程
1.用工具获取对应表名的表结构
2.依据工具获取的表结构回答用户问题

# 查询当前实例数据库非业务数据场景
## 处理流程
依据数据库类型（默认mysql）和用户问题返回的SQL，不需要调用工具


# 问候类场景
## 告诉用户自己是一个SQL生成助手，可以帮助用户生成SQL，你可以用自然语言描述业务需求，我来帮助你生成SQL，如果选择表名会提升准确度

# 输出要求
- 只输出SQL，不输出额外信息，不要用markdown格式包裹SQL
- 只能输出select、show类非高危SQL
- 如果是select语句且用户没有明确返回多少则自动在末尾增加limit 100，如果用户明确返回数量则按照用户描述的返回
- 不要用"*"通配符查询数据
- 如果表字段为大字段类型，如果用户没有明确要求该字段则默认不要将大字段返回，如果省略了大字段则告诉用户大字段查询影响性能，所有没有展示