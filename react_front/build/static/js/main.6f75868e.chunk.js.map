{"version":3,"sources":["scripts/common/util.js","scripts/mysql/mysqlCluster.js","scripts/auditSql/auditSqlIndex.js","scripts/auditSql/executeSql.js","scripts/publicUserManage/pubicUserPrivilegeManage.js","scripts/privilegesApply/createPrivateUser.js","scripts/privilegesApply/privilegesExtend.js","scripts/privilegesApply/userGrant.js","scripts/privilegesApply/orderInformation.js","scripts/commonUser/createCommonUser.js","scripts/commonUser/migrateCommonUser.js","scripts/commonUser/commonUserCharge.js","scripts/Cloud/CloudInstance.js","scripts/login/login.js","scripts/mysql/mysqlInstance.js","App.js","serviceWorker.js","index.js"],"names":["backendServerApiRoot","login_user_info","getUser","a","async","window","localStorage","getItem","params","token","axios","post","catch","error","console","log","res","data","defaults","withCredentials","headers","Search","Input","TabPane","Tabs","Column","Table","callback","key","mysqlCluster","props","state","cluster_info","this","GetClusterInfo","get","location","hostname","setState","cluster_name","temp","columns","title","dataIndex","render","text","record","obj","children","rowSpan","array","i","forEach","item","mergeCells","colSpan","val","status","className","to","placeholder","onSearch","value","GetSearchClusterInfo","style","width","allowClear","dataSource","bordered","size","defaultActiveKey","onChange","tab","gutter","span","disk_avaliable","disk_io","cpu","load","net_interface_in","net_interface_out","rowKey","row","index","pagination","port","instance_name","is_alive","current_running_sql_count","current_connected_user_ratio","hold_global_lock","hold_meta_lock","marginLeft","onClick","viewRunningSqlByInstanceName","viewConnectedUserByInstanceName","wsrep_cluster_name","wsrep_cluster_size","wsrep_local_state_comment","wsrep_connected","wsrep_ready","namespace","io_thread","sql_thread","seconds_behind_master","lock_time_sql_count","rows_sent_sql_count","rows_examined_sql_count","rows_affected_sql_count","error_log_info","Component","TextArea","FormItem","Form","Item","Option","Select","AuditSqlIndex","handleSubmit","e","preventDefault","form","validateFields","err","values","check_sql_results","submit_sql_flag","handleSqlSubmit","message","searchText","handleGetMasterIp","onClusterNameSearch","handleGetClusterName","onSelect","select","des_ip","onClusterNameSelect","handleHostPortChange","des_port","handleClusterNameChange","handleSqlChange","check_sql","showDataModalHandle","length","showDataVisible","showDataHandleCancel","handleDbSourceTypeChange","submit_source_db_type","handleReset","resetFields","toggle","expand","selectEnvOptionData","selectExecuteTypeOptionData","check_sql_info","submit_sql_info","submit_sql_button_disabled","sql_check_loading","sql_submit_loading","des_ip_list","cluster_name_list","schema_name","table_name","min_id","max_id","where_condition","mdl_type","create_sql_content","rebuild_table","set_value","GetSubmitSqlInfo","handleClusterNameSqlCheck","handleMasterIpPortSqlCheck","db_ip","db_port","then","env","info","submit_sql_execute_type","comment_info","reload","alert","db_master_ip_or_hostname","getFieldDecorator","placement","slice","color","submit_sql_uuid","defaultValue","target","rows","type","loading","handleSqlCheck","rowClassName","Error_Level","sorter","b","visible","onCancel","onOk","bind","footer","labelCol","onSubmit","label","rules","required","map","htmlType","handlerCreateBlockSql","create","EditableCell","editable","margin","ExecuteSql","setInterVal","timerId","setInterval","GetSqlApplyByUuid","inception_varialbes_columns","renderColumns","editingKey","name","cancel","onConfirm","save","okText","cancelText","edit","disabled","submit_sql_title","submit_sql","master_ip","master_port","submit_sql_user","leader_user_name","qa_user_name","dba_check_user_name","dba_execute_user_name","leader_check","qa_check","dba_check","dba_execute","execute_status","execute_sql_process_results","view_check_sql_result","view_submit_sql_info","view_submit_split_sql_info","showSubmitSqlViewVisible","showSubmitSqlResultsVisible","ApplyModalVisible","ViewExecuteSubmitSqlModalVisible","ViewExecuteSubmitSqlProcessModalVisible","InceptionVariableConfigModalVisible","timerProcessId","execute_sql_flag","inception_backup","inception_check_ignore_warning","inception_execute_ignore_error","newClusterCfg","newConfig","split_sql_file_path","submit_split_sql","SplitSQLModalVisible","sql_check_max_code","login_user_name","login_user_name_role","sql_view_loading","sql_check_results_loading","sql_check_pass_loading","sql_check_code_explain","check_comment","cacheData","match","GetSqlCheckResultsByUuid","username","sql_uuid","clearInterval","res_split_sql","submit_sql_rows","submit_sql_affect_rows","uuid","inception_error_level_rray","push","Math","max","apply","apply_results","check_user_name","check_user_name_role","success","execute_user_name","file_execute_dict","current_split_seq","execute_sql_results","flag","recreate_sql_flag","getExecuteProcessByUuidTimeInterval","checked","new_config_json","column","handleChange","newData","filter","newCfg","cacheTarget","newConfigJson","Object","assign","justify","padding","GetSubmitSqlByUuid","defaultChecked","inceptionBackupCheckBoxOnChange","inceptionIgnoreWarningCheckBoxOnChange","inceptionIgnoreErrorCheckBoxOnChange","split_seq","ViewSplitSQL","ShowInceptionVariableConfigModal","ExecuteBySplitSqlFilePath","ExecuteBySplitSqlFilePathManual","getExecuteProcessByUuid","ViewExecuteSubmitSqlResultsByUuid","rerun_flag","Fragment","RecreateSql","wrap","minHeight","overflow","inception_error_level","marginTop","PassSubmitSqlByUuid","marginRight","stringA","toUpperCase","stringB","handleUpdateInceptionVariable","server","CheckboxGroup","Checkbox","Group","plainOptions","defaultCheckedList","CreatePrivateUser","grant_db_master_ip","grant_db_master_port","grant_user_name","grant_user_host","grant_database","grant_table","grant_dev_name","grant_privileges","checkedList","join","indeterminate","checkAll","onCheckAllChange","user_info","confirmLoading","options","React","PrivilegesExtend","handleHostIpChange","handleUserChange","privileges_info","handleViewPrivileges","pageSize","scroll","y","privateUser","GetUserInfo","user_name","GetSearchUserInfo","leader_check_result","dba_check_result","order_uuid","OrderInformation","showCheckModal","checkOrderVisible","handleCancel","dev_name","request_type","department","leader","dba","db_master_ip","db_master_port","user_host","db_name","tb_name","ctime","utime","order_info","check_result","handleCheckSubmitPass","handleCheckSubmitNoPass","CreateCommonUser","MigrateCommonUser","handleMigrateSubmit","des_master_ip","des_master_port","commonUser","showMigrateAccountModalHandleCancel","showMigrateAccountDataVisible","des_name","CloudInstance","cloud_instance_info","Login","handleLoginSubmit","login","password","setItem","prefix","mysqlInstance","mysql_instance_info","GetMysqlInstanceInfo","host_name","GetSearchMysqlInstanceInfo","Header","Layout","Footer","Sider","Content","SubMenu","Menu","LoginOut","removeItem","common","App","href","icon","background","mode","defaultSelectedKeys","defaultOpenKeys","height","exact","path","component","is_dba","Cloud","publicManage","privilegesApply","textAlign","Boolean","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f75868e.chunk.js","sourcesContent":["import axios from \"axios\";\n//后端服务器\nexport const backendServerApiRoot = 'http://39.97.247.142:8000/api'    //公网ip\n//export const backendServerApiRoot = 'http://127.0.0.1/api:8000'\n//根据token获取登陆信息\nlet login_user_info = null\nexport async function getUser() {\n  if (window.localStorage.getItem('token')) {\n    let params = {\n      token: window.localStorage.getItem('token')\n    };\n    const res = await axios.post(`${backendServerApiRoot}/get_login_user_name_by_token/`,{params}).catch(error=>{\n      console.log(error)\n    })\n    if (res.data[\"message\"]===\"验证成功\")\n      login_user_info = await res.data\n  }\n\n  console.log(login_user_info)\n  return login_user_info\n}","import React,{Component} from 'react';\nimport axios from 'axios'\nimport {Table, Input, Badge, Tabs, Card, Col, Row, Button} from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport {backendServerApiRoot} from \"../common/util\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\nconst { TabPane } = Tabs;\nconst Column = Table.Column;\nfunction callback(key) {\n  console.log(key);\n}\nexport default class mysqlCluster extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cluster_info:[],\n        }\n    }\n\n    componentDidMount() {\n        this.GetClusterInfo()\n    }\n    //获取所有集群信息\n    async GetClusterInfo() {\n        let res = await axios.get(`${backendServerApiRoot}/get_mysql_cluster_info/`);\n        console.log(res.data);\n        console.log(window && window.location && window.location.hostname);\n        this.setState({\n            cluster_info: res.data.data\n        })\n    }\n    //模糊搜索\n    async GetSearchClusterInfo(cluster_name) {\n        this.setState({\n            cluster_info: []\n        })\n        let res = await axios.post(`${backendServerApiRoot}/get_search_mysql_cluster_info/`,{cluster_name});\n        console.log(res.data);\n        this.setState({\n            cluster_info: res.data.data\n        })\n    }\n\n    render() {\n        let {cluster_info} = this.state;\n        const temp = {}; // 当前重复的值,支持多列\n        const mergeCells = (text, array, columns) => {\n          let i = 0;\n          if (text !== temp[columns]) {\n            temp[columns] = text;\n            array.forEach((item) => {\n              if (item.cluster_name === temp[columns]) {\n                i += 1;\n              }\n            });\n          }\n          return i;\n        };\n        const columns = [\n          {\n            title: '集群名',\n            dataIndex: 'cluster_name',\n            key: 'cluster_name',\n            render: (text, record) => {\n              const obj = {\n                children: text,\n                props: {},\n              };\n              obj.props.rowSpan = mergeCells(record.cluster_name, cluster_info, 'cluster_name');\n              return obj;\n            },\n          },\n          {\n            title: '集群类型',\n            dataIndex: 'cluster_type',\n          },\n          {\n              title: '主机名',\n              dataIndex: 'host_name',\n          },\n          {\n              title: '实例名',\n              colSpan: 1,\n              dataIndex: 'instance_name',\n          },\n          {\n            title: '实例状态',\n            dataIndex: 'instance_status',\n            render:(val) => {\n                return <span>{val===\"正常服务\" ? <Badge status=\"success\"/>:<Badge status=\"error\"/>}{val}</span>\n            }\n          },\n          {\n            title: 'read_only',\n            dataIndex: 'read_only',\n          },\n          {\n              title: '版本',\n              dataIndex: 'version',\n          },\n          {\n              title: '字符集',\n              dataIndex: 'server_charset',\n          },\n          {\n              title: 'master_ip',\n              dataIndex: 'master_ip',\n          },\n          {\n              title: 'master_port',\n              dataIndex: 'master_port',\n          },\n        ];\n        const hostDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                disk_avaliable: 32,\n                disk_io: 0.7,\n                cpu: 0.7,\n                load: 23,\n                net_interface_in:400,\n                net_interface_out:400,\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                disk_avaliable: 32,\n                disk_io: 0.7,\n                cpu: 0.7,\n                load: 23,\n                net_interface_in:400,\n                net_interface_out:400,\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                disk_avaliable: 32,\n                disk_io: 0.7,\n                cpu: 0.7,\n                load: 23,\n                net_interface_in:400,\n                net_interface_out:400,\n            },\n        ];\n        const mysqlCommonDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                port: 3320,\n                instance_name: '10.88.74.185_3320',\n                is_alive: 'Yes',\n                current_running_sql_count: 24,\n                current_connected_user_ratio: 0.1,\n                hold_global_lock: \"NO\",\n                hold_meta_lock: \"NO\",\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                port: 3320,\n                instance_name: '10.88.74.185_3320',\n                is_alive: 'Yes',\n                current_running_sql_count: 3,\n                current_connected_user_ratio: 0.5,\n                hold_global_lock: \"NO\",\n                hold_meta_lock: \"NO\",\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                port: 3320,\n                instance_name: '10.88.74.185_3320',\n                is_alive: 'Yes',\n                current_running_sql_count: 8,\n                current_connected_user_ratio: 0.95,\n                hold_global_lock: \"NO\",\n                hold_meta_lock: \"NO\",\n            },\n        ];\n        const mysqlReplicationDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                io_thread: 'Yes',\n                sql_thread: 'Yes',\n                seconds_behind_master : 0,\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                port: 3320,\n                instance_name: '10.88.74.185_3320',\n                io_thread: 'Yes',\n                sql_thread: 'Yes',\n                seconds_behind_master : 0,\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                port: 3320,\n                instance_name: '10.88.74.185_3320',\n                io_thread: 'Yes',\n                sql_thread: 'Yes',\n                seconds_behind_master : 0,\n            },\n        ];\n        const galeraDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                wsrep_cluster_name: \"gaochao_test_wsrep_cluster\",\n                wsrep_cluster_size: 3,\n                wsrep_local_state_comment:\"Synced\",\n                wsrep_connected: 'ON',\n                wsrep_ready : 'ON',\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                wsrep_cluster_name: \"gaochao_test_wsrep_cluster\",\n                wsrep_cluster_size: 3,\n                wsrep_local_state_comment:\"Synced\",\n                wsrep_connected: 'ON',\n                wsrep_ready : 'ON',\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                namespace: \"gaochao_test_wsrep_cluster\",\n                wsrep_cluster_size: 3,\n                wsrep_local_state_comment:\"Synced\",\n                wsrep_connected: 'ON',\n                wsrep_ready : 'ON',\n            },\n        ];\n        const mysqlErrorLogDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                error_log_info: \"dead lock\",\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                error_log_info: \"dead lock\",\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                error_log_info: \"dead lock\",\n            },\n        ];\n        const mysqlSlowLogDataSource = [\n            {\n                key: '1',\n                hostname: 'l-fbdb1.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                lock_time_sql_count:30,\n                rows_sent_sql_count:10,\n                rows_examined_sql_count:100,\n                rows_affected_sql_count:100,\n            },\n            {\n                key: '2',\n                hostname: 'l-fbdb2.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                lock_time_sql_count:30,\n                rows_sent_sql_count:10,\n                rows_examined_sql_count:100,\n                rows_affected_sql_count:100,\n            },\n            {\n                key: '3',\n                hostname: 'l-fbdb3.dba.cn1',\n                instance_name: '10.88.74.185_3320',\n                port: 3320,\n                lock_time_sql_count:30,\n                rows_sent_sql_count:10,\n                rows_examined_sql_count:100,\n                rows_affected_sql_count:100,\n            },\n        ];\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/mysqlCluster\">\n                            集群信息\n                        </Link>\n                    </div>\n                    <div>\n                        <Search\n                          placeholder=\"集群名\"\n                          onSearch={value => this.GetSearchClusterInfo(value)}\n                          style={{ width: 200 }}\n                          allowClear\n                        />\n                    </div>\n                </div>\n                <Table\n                    dataSource={this.state.cluster_info}\n                    columns={columns}\n                    bordered\n                    size=\"small\"\n                />\n                <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                    <TabPane tab=\"诊断\" key=\"1\">\n                        <div className=\"site-card-wrapper\">\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Card title=\"主机诊断\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={hostDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            <Column title=\"主机名\" dataIndex=\"hostname\"/>\n                                            <Column title=\"磁盘剩余空间(M)\" dataIndex=\"disk_avaliable\"/>\n                                            <Column title=\"磁盘io(%util)\" dataIndex=\"disk_io\"/>\n                                            <Column title=\"Cpu(%)\" dataIndex=\"cpu\"/>\n                                            <Column title=\"load\" dataIndex=\"load\"/>\n                                            <Column title=\"网卡流量入(Mib)\" dataIndex=\"net_interface_in\"/>\n                                            <Column title=\"网卡流量出(Mib)\" dataIndex=\"net_interface_out\"/>\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Card title=\"MySQL通用诊断\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={mysqlCommonDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            {/*<Column title=\"主机名\" dataIndex=\"hostname\"/>*/}\n                                            {/*<Column title=\"端口\" dataIndex=\"port\"/>*/}\n                                            <Column title=\"实例名\" dataIndex=\"instance_name\"/>\n                                            <Column title=\"是否运行\" dataIndex=\"is_alive\"/>\n                                            {/*<Column title=\"运行sql数量\" dataIndex=\"current_running_sql_count\"/>*/}\n                                            <Column title=\"运行sql数量\"\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.current_running_sql_count>=24 ? <span className = 'row-detail-error'>{record.current_running_sql_count}</span>:<span>{record.current_running_sql_count}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewRunningSqlByInstanceName(record.instance_name)}}>查看详情</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                            {/*<Column title=\"连接数比例\" dataIndex=\"current_connected_user_ratio\"/>*/}\n                                            <Column title=\"当前连接数/最大连接数(%)\"\n                                                // render={record => {\n                                                //     return <Link to={`/viewConnectedUserByInstanceName/${record.instance_name}`}>{record.current_connected_user_ratio}</Link>\n                                                // }}\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.current_connected_user_ratio>=0.95 ? <span className = 'row-detail-error'>{record.current_connected_user_ratio *100}</span>:<span>{record.current_connected_user_ratio*100}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewConnectedUserByInstanceName(record.instance_name)}}>查看详情</Button>\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewConnectedUserByInstanceName(record.instance_name)}}>更改连接数</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                            <Column title=\"全局锁\" dataIndex=\"hold_global_lock\"/>\n                                            <Column title=\"元数据锁\" dataIndex=\"hold_meta_lock\"/>\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={13}>\n                                    <Card title=\"galera诊断\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={galeraDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            <Column title=\"实例名\" dataIndex=\"instance_name\"/>\n                                            <Column title=\"wsrep_local_state_comment\" dataIndex=\"wsrep_local_state_comment\"/>\n                                            <Column title=\"wsrep_connected\" dataIndex=\"wsrep_connected\"/>\n                                            <Column title=\"wsrep_ready\" dataIndex=\"wsrep_ready\"/>\n                                        </Table>\n                                    </Card>\n                                </Col>\n                                <Col span={11}>\n                                    <Card title=\"replication诊断\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={mysqlReplicationDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            {/*<Column title=\"主机名\" dataIndex=\"hostname\"/>*/}\n                                            {/*<Column title=\"端口\" dataIndex=\"port\"/>*/}\n                                            <Column title=\"实例名\" dataIndex=\"instance_name\"/>\n                                            <Column title=\"io_thread\" dataIndex=\"io_thread\"/>\n                                            <Column title=\"sql_thread\" dataIndex=\"sql_thread\"/>\n                                            <Column title=\"delay(s)\" dataIndex=\"seconds_behind_master\"/>\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Card title=\"慢查询日志诊断(最近600s)\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={mysqlSlowLogDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            {/*<Column title=\"主机名\" dataIndex=\"hostname\"/>*/}\n                                            {/*<Column title=\"端口\" dataIndex=\"port\"/>*/}\n                                            <Column title=\"实例名\" dataIndex=\"instance_name\"/>\n                                            {/*<Column title=\"Lock_time异常sql数量(>1s)\" dataIndex=\"lock_time_sql_count\"/>*/}\n                                            <Column title=\"Lock_time异常sql数量(>1s)\"\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.lock_time_sql_count>=24 ? <span className = 'row-detail-error'>{record.lock_time_sql_count}</span>:<span>{record.lock_time_sql_count}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewRunningSqlByInstanceName(record.lock_time_sql_count)}}>查看详情</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                            {/*<Column title=\"Rows_sent异常sql数量(>1万)\" dataIndex=\"rows_sent_sql_count\"/>*/}\n                                            <Column title=\"Rows_sent异常sql数量(>1万)\"\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.rows_sent_sql_count>=24 ? <span className = 'row-detail-error'>{record.rows_sent_sql_count}</span>:<span>{record.rows_sent_sql_count}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewRunningSqlByInstanceName(record.rows_sent_sql_count)}}>查看详情</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                            {/*<Column title=\"Rows_examined异常SQL数量(>1万)\" dataIndex=\"rows_examined_sql_count\"/>*/}\n                                            <Column title=\"Rows_examined异常SQL数量(>1万)\"\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.rows_examined_sql_count>=24 ? <span className = 'row-detail-error'>{record.rows_examined_sql_count}</span>:<span>{record.rows_examined_sql_count}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewRunningSqlByInstanceName(record.rows_examined_sql_count)}}>查看详情</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                            {/*<Column title=\"Rows_affected异常SQL数量(>1万)\" dataIndex=\"rows_affected_sql_count\"/>*/}\n                                            <Column title=\"Rows_affected异常SQL数量(>1万)\"\n                                                render={record => {\n                                                        return (\n                                                            <div>\n                                                                {record.rows_affected_sql_count>=24 ? <span className = 'row-detail-error'>{record.rows_affected_sql_count}</span>:<span>{record.rows_affected_sql_count}</span>}\n                                                                <Button className=\"link-button\" style={{marginLeft:15}}  onClick={()=>{this.viewRunningSqlByInstanceName(record.rows_affected_sql_count)}}>查看详情</Button>\n                                                            </div>\n\n                                                        )\n                                                    }\n                                                }\n                                            />\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row gutter={16}>\n                                <Col span={24}>\n                                    <Card title=\"错误日志诊断(最近600s)\" bordered={false} size=\"small\">\n                                        <Table\n                                            dataSource={mysqlErrorLogDataSource}\n                                            rowKey={(row ,index) => index}\n                                            pagination={false}\n                                            size=\"small\"\n                                            bordered={true}\n                                        >\n                                            <Column title=\"实例名\" dataIndex=\"instance_name\"/>\n                                            <Column title=\"错误日志信息\" dataIndex=\"error_log_info\"/>\n                                        </Table>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </div>\n                    </TabPane>\n                    <TabPane tab=\"Tab 2\" key=\"2\">\n                        Content of Tab Pane 2\n                    </TabPane>\n                    <TabPane tab=\"Tab 3\" key=\"3\">\n                        Content of Tab Pane 3\n                    </TabPane>\n              </Tabs>\n            </div>\n        )\n    }\n}","import React,{Component} from 'react';\nimport axios from 'axios'\nimport {Button, Table, Input, Modal, Tabs, Form, Row, Select, message, Card, AutoComplete, Tooltip} from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport { backendServerApiRoot } from \"../common/util\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { TextArea } = Input\nconst { TabPane } = Tabs;\nconst Column = Table.Column;\nconst FormItem = Form.Item;\nconst { Option } = Select;\n\n\nclass AuditSqlIndex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand:false,\n            selectEnvOptionData:['生产','测试'],\n            selectExecuteTypeOptionData:['立即执行','暂缓执行'],\n            des_ip:\"\",\n            des_port:\"\",\n            check_sql:\"\",\n            check_sql_info:[],\n            check_sql_results:[],\n            showDataVisible: false,\n            submit_sql_info:[],\n            submit_sql_button_disabled:\"hide\",\n            submit_sql_flag:\"未提交\",\n            sql_check_loading:false,\n            sql_submit_loading:false,\n            des_ip_list:[],\n            cluster_name_list:[],\n            submit_source_db_type:\"cluster\",\n            cluster_name:\"\",\n            schema_name:\"\",\n            table_name:\"\",\n            min_id:\"\",\n            max_id:\"\",\n            where_condition:\"\",\n            mdl_type:\"delete\",\n            create_sql_content:\"\",\n            rebuild_table:\"\",\n            set_value:\"\",\n\n        }\n    }\n\n\n    componentDidMount() {\n        this.GetSubmitSqlInfo()\n    }\n    //获取已经提交的SQL列表\n    async GetSubmitSqlInfo() {\n        let res = await axios.get(`${backendServerApiRoot}/get_submit_sql_info/`,);\n        this.setState({\n            submit_sql_info: res.data.data,\n        });\n    }\n    //检测SQL,cluster_name或者master_ip_port使用不同的方法\n    async handleSqlCheck() {\n        this.state.submit_source_db_type===\"cluster\" ? this.handleClusterNameSqlCheck(): this.handleMasterIpPortSqlCheck()\n    }\n\n    //生成块SQL,防止delete/update产生大事物\n    async handlerCreateBlockSql() {\n        this.setState({create_sql_content:\"\"})\n        let params = {\n                db_ip: this.state.des_ip,\n                db_port: this.state.des_port,\n                cluster_name:this.state.cluster_name,\n                schema_name:this.state.schema_name,\n                table_name:this.state.table_name,\n                min_id:this.state.min_id,\n                max_id:this.state.max_id,\n                where_condition: this.state.where_condition,\n                mdl_type: this.state.mdl_type,\n                rebuild_table: this.state.rebuild_table,\n                set_value: this.state.set_value,\n            };\n        console.log(params)\n        await axios.post(`${backendServerApiRoot}/create_block_sql/`,{params}).then(\n                res => {res.data.status===\"ok\"?\n                    this.setState({\n                        create_sql_content: res.data.data,\n                    })\n                    :\n                    message.error(res.data.message,3) && this.setState({create_sql_content: \"\"})\n                }\n            ).catch(err => {\n                message.error(err, 3);\n                this.setState({\n                    create_sql_content: \"\",\n                });\n            })\n    }\n    //cluster_name检测SQL,集群名和输入SQL不能为空\n    async handleClusterNameSqlCheck() {\n        if (this.state.cluster_name.length===0 || this.state.check_sql.length===0){\n            message.error(\"输入框不能为空\")\n        }else{\n            let params = {\n                db_ip: this.state.des_ip,\n                db_port: this.state.des_port,\n                check_sql_info: this.state.check_sql,\n                cluster_name:this.state.cluster_name,\n                submit_source_db_type:this.state.submit_source_db_type\n            };\n            this.setState({\n                check_sql_results: [],\n                sql_check_loading:true,\n                submit_sql_button_disabled:\"hide\"\n            });\n            await axios.post(`${backendServerApiRoot}/check_sql/`,{params}).then(\n                res => {res.data.status===\"ok\"?\n                    this.setState({\n                        check_sql_results: res.data.data,\n                        submit_sql_button_disabled:\"show\",\n                        sql_check_loading:false,\n                    })\n                    :\n                    message.error(res.data.message,3) && this.setState({check_sql_results: [],sql_check_loading:false,})\n                }\n            ).catch(err => {\n                message.error(err, 3);\n                this.setState({\n                    check_sql_results: [],\n                    sql_check_loading:false,\n                });\n            })\n        }\n    }\n    //master_ip_port检测SQL,ip、port、输入SQL不能为空\n    async handleMasterIpPortSqlCheck() {\n        if (this.state.des_ip.length===0 || this.state.des_port.length===0 || this.state.check_sql.length===0){\n            message.error(\"输入框不能为空\")\n        }else{\n            let params = {\n                db_ip: this.state.des_ip,\n                db_port: this.state.des_port,\n                check_sql_info: this.state.check_sql,\n                cluster_name:this.state.cluster_name,\n                submit_source_db_type:this.state.submit_source_db_type\n            };\n            this.setState({\n                check_sql_results: [],\n                sql_check_loading:true,\n                submit_sql_button_disabled:\"hide\"\n            });\n            await axios.post(`${backendServerApiRoot}/check_sql/`,{params}).then(\n                res => {res.data.status===\"ok\"?\n                    this.setState({\n                        check_sql_results: res.data.data,\n                        submit_sql_button_disabled:\"show\",\n                        sql_check_loading:false,\n                    })\n                    :\n                    message.error(res.data.message,3) && this.setState({check_sql_results: [],sql_check_loading:false,})\n                }\n            ).catch(err => {\n                message.error(err, 3);\n                this.setState({\n                    check_sql_results: [],\n                    sql_check_loading:false,\n                });\n            })\n        }\n    }\n\n    //组装提交SQL信息,防止多次提交\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values,this.state.check_sql_results);\n            values[\"check_sql_results\"] = this.state.check_sql_results;\n            this.state.submit_sql_flag === \"未提交\" ? this.handleSqlSubmit(values) : message.error(this.state.submit_sql_flag)\n        });\n    };\n    //提交SQL\n    async handleSqlSubmit(value) {\n        this.setState({\n            sql_submit_loading:true\n        });\n        let params = {\n            submit_source_db_type:this.state.submit_source_db_type,\n            cluster_name:this.state.cluster_name,\n            db_ip: this.state.des_ip,\n            db_port: this.state.des_port,\n            check_sql: this.state.check_sql,\n            title:value[\"Title\"],\n            env:value[\"ENV\"],\n            info:value[\"INFO\"],\n            check_sql_results: value[\"check_sql_results\"],\n            submit_sql_execute_type: value[\"执行类型\"],\n            comment_info: value[\"comment_info\"],\n        };\n        let res = await axios.post(`${backendServerApiRoot}/submit_sql/`,{params});\n        if( res.data.status === 'ok'){\n            window.location.reload();\n        }\n        else\n            alert(res.data.message);\n    }\n\n    //master ip输入框\n    onSearch = searchText => {\n        this.handleGetMasterIp(searchText)\n    };\n    //根据master ip输入框自动补全ip\n    async handleGetMasterIp(value) {\n        if (value.length>=1){\n            let params = {\n                db_master_ip_or_hostname: value\n            };\n            let res = await axios.post(`${backendServerApiRoot}/get_master_ip/`,{params});\n            if( res.data.status === 'ok'){\n                this.setState({\n                    des_ip_list: res.data.data.length===0 ? []:res.data.data,\n                });\n            } else{\n                console.log(\"get_master_ip接口错误\")\n            }\n        }else {\n            this.setState({\n                des_ip_list: []\n            });\n        }\n    }\n    //cluster_name输入框\n    onClusterNameSearch = searchText => {\n        this.handleGetClusterName(searchText)\n    };\n    //根据cluster_name输入框自动补全ip\n    async handleGetClusterName(value) {\n        if (value.length>=1){\n            let params = {\n                cluster_name: value\n            };\n            let res = await axios.post(`${backendServerApiRoot}/get_cluster_name/`,{params});\n            if( res.data.status === 'ok'){\n                this.setState({\n                    cluster_name_list: res.data.data.length===0 ? []:res.data.data,\n                });\n            } else{\n                console.log(\"get_cluster_name接口错误\")\n            }\n        }else {\n            this.setState({\n                cluster_name_list: []\n            });\n        }\n    }\n    //搜索出来ip后点击捕获\n    onSelect = select => {\n        this.setState({\n            des_ip:select\n        })\n    };\n    //搜索出来cluster_name后点击捕获\n    onClusterNameSelect = select => {\n        this.setState({\n            cluster_name:select\n        })\n    };\n    //master port输入框\n    handleHostPortChange = (value) => {\n        this.setState({\n            des_port: value\n        })\n    }\n    //cluster name输入框自动搜索\n    handleClusterNameChange = (value) => {\n        this.setState({\n            cluster_name: value\n        })\n    }\n    //sql输入框\n    handleSqlChange = (value) => {\n        this.setState({\n            check_sql: value,\n            check_sql_results:[],\n        })\n    }\n    //工单提交modal弹出按钮\n    showDataModalHandle = (e) => {\n        if (this.state.check_sql.length===0|| this.state.check_sql_results.length===0){\n            message.error(\"提交所需参数不满足要求\")\n        }else {\n            this.setState({\n                showDataVisible: true\n            });\n        }\n    }\n    //工单提交modal返回按钮\n    showDataHandleCancel = (e) => {\n        this.setState({\n            showDataVisible: false,\n        });\n    }\n    //提工单数据源方式选择\n    handleDbSourceTypeChange = (value) => {\n        this.setState({\n            submit_source_db_type: value,\n        });\n    }\n\n    handleReset = () => {\n      this.props.form.resetFields();\n    };\n\n    toggle = () => {\n      const { expand } = this.state;\n      this.setState({ expand: !expand });\n    };\n    render() {\n              const check_results_columns = [\n            {\n              title: 'ID',\n              dataIndex: 'ID',\n              key: \"ID\",\n            },\n            {\n              title: 'SQL',\n              dataIndex: 'SQL',\n              key: \"SQL\",\n              width:520\n            },\n            {\n              title: '状态',\n              dataIndex: 'Stage_Status',\n              key:\"Stage_Status\",\n            },\n            {\n              title: '错误代码',\n              dataIndex: 'Error_Level',\n              key:\"Error_Level\",\n              sorter: (a, b) => a.Error_Level - b.Error_Level,\n            },\n            {\n              title: '错误信息',\n              dataIndex: 'Error_Message',\n              key:\"Error_Message\",\n            },\n            {\n              title: '影响行数',\n              dataIndex: 'Affected_rows',\n              key:\"Affected_rows\",\n            }\n        ];\n        const {form} = this.props;\n        const {getFieldDecorator} = form;\n        return (\n            <Tabs className=\"container\">\n                <TabPane tab=\"SQL工单列表\" key=\"1\">\n                    <Table\n                        dataSource={this.state.submit_sql_info}\n                        rowKey={(row ,index) => index}\n                        size=\"small\"\n                    >\n                        <Column title=\"标题\"\n                            dataIndex=\"title\"\n                            render={(text) => {\n                                return (\n                                    text.length>5 ?\n                                    <Tooltip placement=\"topLeft\" title={text}>\n                                        <span>{text.slice(0,5)}...</span>\n                                    </Tooltip>\n                                        :<span>{text}</span>\n                                )\n                            }}\n                        />\n                        <Column title=\"申请人\"\n                                dataIndex=\"submit_sql_user\"/>\n                        <Column title=\"TL\"\n                            dataIndex=\"leader_user_name\"/>\n                        <Column title=\"QA\"\n                            dataIndex=\"qa_user_name\"/>\n                        <Column title=\"TL审核\"\n                                dataIndex=\"leader_check\"\n                                render={(val) => {\n                                return <span>{val===\"通过\" ? <span style={{color:\"green\"}}>{val}</span>:<span style={{color:\"red\"}}>{val}</span>}</span>\n                                }}\n                        />\n                        <Column title=\"QA审核\"\n                                dataIndex=\"qa_check\"\n                                render={(val) => {\n                                    return <span>{val===\"通过\" ? <span style={{color:\"green\"}}>{val}</span>:<span style={{color:\"red\"}}>{val}</span>}</span>\n                                }}\n                        />\n                        <Column title=\"DBA审核\"\n                                dataIndex=\"dba_check\"\n                                render={(val) => {\n                                    return <span>{val===\"通过\" ? <span style={{color:\"green\"}}>{val}</span>:<span style={{color:\"red\"}}>{val}</span>}</span>\n                                }}\n                        />\n                        <Column title=\"DBA执行\"\n                                dataIndex=\"dba_execute\"\n                                render={(val) => {\n                                    return <span>{val===\"已执行\" ? <span style={{color:\"green\"}}>{val}</span>:<span>{val}</span>}</span>\n                                }}\n                        />\n                        <Column title=\"执行人员\"\n                                dataIndex=\"dba_execute_user_name\"/>\n                        <Column title=\"执行结果\"\n                                dataIndex=\"execute_status\"\n                                render={(val) => {\n                                    return <span>{val===\"执行成功\" || val===\"未执行\"? <span>{val}</span>:<span  style={{color:\"red\"}}>{val}</span>}</span>\n                                }}\n                        />\n                        <Column title=\"工单创建时间\"\n                            dataIndex=\"ctime\"/>\n                        <Column title=\"工单修改时间\"\n                            dataIndex=\"utime\"/>\n                        <Column title=\"操作\"\n                            render={record => {\n                                return <Link to={`/viewApplySqlByUuid/${record.submit_sql_uuid}`}>查看</Link>\n                            }}/>\n                    </Table>\n                </TabPane>\n                <TabPane tab=\"SQL新建工单\" key=\"2\">\n                    <div className=\"sub-title-input\">\n                        <Select defaultValue=\"集群名\" style={{ width: 150 }} onChange={e => this.handleDbSourceTypeChange(e)}>\n                            <Option value=\"cluster\">集群名</Option>\n                            <Option value=\"master_ip\">master_ip_port</Option>\n                            <Option value=\"template\">模版</Option>\n                        </Select>\n                        {\n                            this.state.submit_source_db_type===\"cluster\" ?\n                                <div>\n                                    <AutoComplete\n                                        dataSource={this.state.cluster_name_list}\n                                        style={{ width: 300,marginLeft:10 }}\n                                        onSelect={this.onClusterNameSelect}\n                                        onSearch={this.onClusterNameSearch}\n                                        placeholder=\"输入集群名\"\n                                        size=\"default\"\n                                    />\n                                </div>\n                            :\n                                <div>\n                                    <AutoComplete\n                                        dataSource={this.state.des_ip_list}\n                                        style={{ width: 300,marginLeft:10 }}\n                                        onSelect={this.onSelect}\n                                        onSearch={this.onSearch}\n                                        placeholder=\"数据库主库地址ip或主机名\"\n                                        size=\"default\"\n                                    />\n                                    <Input size=\"default\" style={{marginLeft:10, width: 300}} placeholder=\"数据库端口\" onChange={e => this.handleHostPortChange(e.target.value)}/>\n                                </div>\n                        }\n                    </div>\n                    <div>\n                        <TextArea rows={10} placeholder=\"输入SQL,每条SQL以 ; 结尾\"  onChange={e => this.handleSqlChange(e.target.value)}/>\n                        <Button type=\"primary\" loading={this.state.sql_check_loading} onClick={()=>{this.handleSqlCheck()}}>检测SQL</Button>\n                        {this.state.submit_sql_button_disabled===\"show\" ? <Button  style={{marginLeft:10}} type=\"primary\" onClick={()=>{this.showDataModalHandle()}}>提交SQL</Button>:null}\n                    </div>\n                    <Table\n                          dataSource={this.state.check_sql_results}\n                          rowKey={(row ,index) => index}\n                                                    rowClassName={(record, index) => {\n                                                let className = 'row-detail-default ';\n                                                if (record.Error_Level === 2) {\n                                                    className = 'row-detail-error';\n                                                    return className;\n                                                }else if (record.Error_Level  === 0){\n                                                    className = 'row-detail-success';\n                                                    return className;\n                                                }else if (record.Error_Level  === 1){\n                                                    className = 'row-detail-warning';\n                                                    return className;\n                                                }else {\n                                                    return className;\n                                                }\n                                    }}\n                            pagination={true}\n                            size=\"small\"\n                            columns={check_results_columns}\n\n                      />\n                    <Modal\n                        title=\"表单提交\"\n                        visible={this.state.showDataVisible}\n                        onCancel={this.showDataHandleCancel}\n                        onOk={this.handleSqlSubmit.bind(this)}\n                        width='960px'\n                        footer={false}\n                    >\n                        <Form className=\"ant-advanced-search-form\" labelCol={{ span: 2 }} onSubmit={this.handleSubmit}>\n                            <Row gutter={24}>\n                                <Card>\n                                    <FormItem  label='Title'>\n                                        {getFieldDecorator('Title', {rules: [{required: true, message: '请输入title'}],})(\n                                            <Input placeholder='请输入title'/>\n                                        )}\n                                    </FormItem>\n                                    <FormItem  label='ENV'>\n                                        {getFieldDecorator('ENV', {rules: [{required: true, message: '请输入环境'}],})(\n                                            <Select>\n                                                {this.state.selectEnvOptionData.map((record,index) => <Select.Option key={index} value={record}>{record}</Select.Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                    <FormItem  label='执行类型'>\n                                        {getFieldDecorator('执行类型', {rules: [{required: true, message: '请输入执行类型'}],})(\n                                            <Select>\n                                                {this.state.selectExecuteTypeOptionData.map((record,index) => <Select.Option key={index} value={record}>{record}</Select.Option>)}\n                                            </Select>\n                                        )}\n                                    </FormItem>\n                                    <FormItem  label='备注'>\n                                        {getFieldDecorator('comment_info', {rules: [{required: true, message: '请输入comment_info'}],})(\n                                            <Input placeholder='请输入备注'/>\n                                        )}\n                                    </FormItem>\n                                </Card>\n                                <Button type=\"primary\" loading={this.state.sql_submit_loading} htmlType=\"submit\">submit</Button>\n                            </Row>\n                        </Form>\n                    </Modal>\n                </TabPane>\n                <TabPane tab=\"生成块SQL\" key=\"3\">\n                    <div className=\"sub-title-input\">\n                        <Input size=\"default\" style={{ width: 150}} placeholder=\"库名\" onChange={e => this.setState({schema_name:e.target.value})}/>\n                        <Input size=\"default\" style={{marginLeft:10, width: 300}} placeholder=\"表名\" onChange={e => this.setState({table_name:e.target.value})}/>\n                    </div>\n                    <div className=\"sub-title-input\">\n                        <Input size=\"default\" style={{ width: 150}} placeholder=\"最小ID\" onChange={e => this.setState({min_id:e.target.value})}/>\n                        <Input size=\"default\" style={{marginLeft:10, width: 300}} placeholder=\"最大ID\" onChange={e => this.setState({max_id:e.target.value})}/>\n                    </div>\n                    <div className=\"sub-title-input\">\n                        <Select defaultValue=\"delete\" style={{ width: 150 }} onChange={e => this.setState({mdl_type:e})}>\n                            <Option value=\"delete\">delete</Option>\n                            <Option value=\"update\">update</Option>\n                        </Select>\n                        {\n                            this.state.mdl_type === \"delete\" ?\n                                <Select defaultValue=\"重建表\" style={{marginLeft:10, width: 150 }} onChange={e => this.setState({rebuild_table:e})}>\n                                    <Option value=\"重建表\">重建表</Option>\n                                    <Option value=\"不重建表\">不重建表</Option>\n                                </Select>\n                            :null\n                        }\n                    </div>\n                    <div className=\"sub-title-input\">\n                        {this.state.mdl_type === \"update\" ? <Input size=\"default\" style={{width: 800}} placeholder=\"set 条件(不要输入set关键字),正确输入案例:name='张三', age=18\" onChange={e => this.setState({set_value:e.target.value})}/> :null}\n                    </div>\n                    <div className=\"sub-title-input\">\n                        <Input size=\"default\" style={{width: 800}} placeholder=\"where 条件(不要输入where关键字,不要输入结束符),正确输入案例:name='张三' and age=18\" onChange={e => this.setState({where_condition:e.target.value})}/>\n                    </div>\n                    <div className=\"sub-title-input\">\n                        <Button type=\"primary\" loading={this.state.sql_check_loading} onClick={()=>{this.handlerCreateBlockSql()}}>生成SQL</Button>\n                    </div>\n                    <div className=\"sub-title-input\">\n                        {this.state.create_sql_content === \"\" ? null : <TextArea rows={5} value={this.state.create_sql_content} onChange={e => this.setState({where_condition:e.target.value})}/>}\n                    </div>\n                    <br/>\n                    <div><span style={{color:\"#fa541c\"}}>功能说明1：通过主键id和用户条件拆分成多个SQL,避免大事物影响线上业务(适用主键为id整型自增场景)</span></div>\n                    <div><span style={{color:\"#fa541c\"}}>功能说明2：重建表用来回收delete产生的碎片,释放数据文件空间及磁盘空间</span></div>\n                </TabPane>\n            </Tabs>\n        );\n    }\n}\nexport default Form.create()(AuditSqlIndex);","import React, { Component } from 'react';\nimport { Table, Row, Col, Button, message, Modal, Input, Checkbox,Popconfirm, } from 'antd';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport {backendServerApiRoot, getUser} from \"../common/util\";\nconst Column = Table.Column;\nconst TextArea = Input.TextArea;\nconst EditableCell = ({ editable, value, onChange }) => (\n    <div>\n        {editable\n          ? <Input style={{ margin: '-5px 0' }} value={value} onChange={e => onChange(e.target.value)} />\n          : value\n        }\n    </div>\n);\n\nexport default class ExecuteSql extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            submit_sql_title:\"\",\n            submit_sql:\"\",\n            master_ip:\"\",\n            master_port:\"\",\n            submit_sql_user:\"\",\n            leader_user_name:\"\",\n            qa_user_name:\"\",\n            dba_check_user_name:\"\",\n            dba_execute_user_name:\"\",\n            leader_check: \"\",\n            qa_check: \"\",\n            dba_check: \"\",\n            dba_execute: \"\",\n            execute_status:\"\",\n            execute_sql_process_results:[],\n            check_sql_results:[],\n            view_check_sql_result:[],\n            view_submit_sql_info:[],\n            view_submit_split_sql_info:[],\n            submit_sql_uuid:\"\",\n            showSubmitSqlViewVisible:false,\n            showSubmitSqlResultsVisible:false,\n            ApplyModalVisible:false,\n            ViewExecuteSubmitSqlModalVisible:false,\n            ViewExecuteSubmitSqlProcessModalVisible:false,\n            InceptionVariableConfigModalVisible:false,\n            timerId:null,\n            timerProcessId:null,\n            execute_sql_flag:\"\",\n            inception_backup:1,\n            inception_check_ignore_warning:0,\n            inception_execute_ignore_error:0,\n            data :[],\n            editingKey:'',\n            newClusterCfg:{},\n            newConfig:{},\n            split_sql_file_path:\"\",\n            submit_split_sql:\"\",\n            SplitSQLModalVisible:false,\n            sql_check_max_code:\"\",\n            login_user_name:\"\",\n            login_user_name_role:\"\",\n            sql_view_loading:false,\n            sql_check_results_loading:false,\n            sql_check_pass_loading:false,\n            sql_check_code_explain:\"\",\n            cluster_name:\"\",\n            check_comment:\"\",\n        }\n        this.cacheData = this.state.data.map(item => ({ ...item }));\n    }\n\n    componentDidMount() {\n        let submit_sql_uuid = this.props.match.params[\"submit_sql_uuid\"];\n        this.GetSqlApplyByUuid(submit_sql_uuid)\n        this.GetSqlCheckResultsByUuid(submit_sql_uuid);\n        getUser().then(res => {\n            this.setState({\n                login_user_name: res.data.username,\n                login_user_name_role: res.data.title\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n    };\n    //获取提交SQL的详细信息\n    async GetSqlApplyByUuid(sql_uuid) {\n        let params = {\n            submit_sql_uuid: this.props.match.params[\"submit_sql_uuid\"],\n        };\n        if( this.state.execute_status === \"执行成功\" || this.state.execute_status === \"执行失败\"  || this.state.execute_status === \"执行成功(含警告)\"){\n            window.clearInterval(this.timerId);\n            window.clearInterval(this.timerProcessId);\n            console.log(\"SQL执完毕，关闭定时器\");\n        } else{\n             console.log(\"SQL执行中，定时id为:\",this.timerId);\n             console.log(\"SQL执行状态:\",this.state.execute_status);\n        }\n        let res = await axios.post(`${backendServerApiRoot}/get_apply_sql_by_uuid/`,{params});\n        let res_split_sql = await axios.post(`${backendServerApiRoot}/get_split_sql_by_uuid/`,{params});\n        if (res.data.data[0][\"cluster_name\"].length>0){\n            this.setState({\n                cluster_name:res.data.data[0][\"cluster_name\"]\n            })\n        }else{\n            this.setState({\n                master_ip: res.data.data[0][\"master_ip\"],\n                master_port: res.data.data[0][\"master_port\"],\n            })\n        }\n        this.setState({\n            submit_sql_title: res.data.data[0][\"title\"],\n            submit_sql_user: res.data.data[0][\"submit_sql_user\"],\n            leader_user_name: res.data.data[0][\"leader_user_name\"],\n            qa_user_name: res.data.data[0][\"qa_user_name\"],\n            dba_check_user_name: res.data.data[0][\"dba_check_user_name\"],\n            dba_execute_user_name: res.data.data[0][\"dba_execute_user_name\"],\n            leader_check: res.data.data[0][\"leader_check\"],\n            qa_check: res.data.data[0][\"qa_check\"],\n            dba_check: res.data.data[0][\"dba_check\"],\n            dba_execute: res.data.data[0][\"dba_execute\"],\n            execute_status: res.data.data[0][\"execute_status\"],\n            submit_sql_uuid:res.data.data[0][\"submit_sql_uuid\"],\n            submit_sql_rows:res.data.data[0][\"submit_sql_rows\"],\n            submit_sql_affect_rows:res.data.data[0][\"submit_sql_affect_rows\"],\n            submit_sql_execute_type:res.data.data[0][\"submit_sql_execute_type\"],\n            comment_info:res.data.data[0][\"comment_info\"],\n            view_submit_split_sql_info:res_split_sql.data.data,\n        })\n        console.log(this.state.view_submit_split_sql_info)\n    };\n    //提交预览SQL\n    async GetSubmitSqlByUuid(uuid) {\n        this.setState({\n            sql_view_loading:true,\n        })\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_submit_sql_by_uuid/`,{params});\n        if (res.data.status===\"ok\"){\n            this.setState({\n                showSubmitSqlViewVisible: true,\n                submit_sql:res.data.data,\n                sql_view_loading:false,\n            })\n        }else{\n            message.error(res.data.message)\n            this.setState({\n                sql_view_loading:false,\n            })\n        }\n    };\n\n    //查看SQL审核结果\n    async GetSqlCheckResultsByUuid(uuid) {\n        this.setState({\n            sql_check_results_loading:true\n        })\n        // let token = window.localStorage.getItem('token')\n        let params = {\n            submit_sql_uuid: this.props.match.params[\"submit_sql_uuid\"],\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_check_sql_results_by_uuid/`,{params});\n        let inception_error_level_rray=[];\n        for(var i=0;i<res.data.data.length;i++){\n            inception_error_level_rray.push(res.data.data[i][\"inception_error_level\"])\n        };\n        this.setState({\n            view_check_sql_result:res.data.data,\n            sql_check_max_code: Math.max.apply(null,inception_error_level_rray),\n            sql_check_code_explain: Math.max.apply(null,inception_error_level_rray)!==0 ? \"异常\":\"正常\",\n            sql_check_results_loading:false\n        });\n    };\n    //审核通过或不通过\n    async PassSubmitSqlByUuid(value) {\n        this.setState({\n            sql_check_pass_loading:true\n        });\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            apply_results:value,\n            check_user_name:this.state.login_user_name,\n            check_user_name_role:this.state.login_user_name_role,\n            check_comment:this.state.check_comment,\n        };\n        let res = await axios.post(`${backendServerApiRoot}/pass_submit_sql_by_uuid/`,{params});\n        message.success(res.data.message);\n        this.setState({\n            ApplyModalVisible: false,\n            view_submit_sql_info:res.data.data,\n            sql_check_pass_loading:false\n        });\n        this.GetSqlApplyByUuid(this.state.submit_sql_uuid);\n    };\n\n    //间隔执行\n    setInterVal = () => {\n         this.timerId = window.setInterval(this.GetSqlApplyByUuid.bind(this),1000);\n         // this.timerProcessId = window.setInterval(this.getExecuteProcessByUuidTimeInterval.bind(this),1000);\n    }\n    //平台自动执行SQL\n    async ExecuteBySplitSqlFilePath(split_sql_file_path) {\n        //如果current_split_seq是最小则直接执行,否则判断他前面的是否已经执行,如果前面没执行,后面不允许执行,代码需要code\n        this.setState({\n            execute_status: \"执行中\"\n        });\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            inception_backup: this.state.inception_backup,\n            inception_check_ignore_warning: this.state.inception_check_ignore_warning,\n            inception_execute_ignore_error: this.state.inception_execute_ignore_error,\n            split_sql_file_path:split_sql_file_path,\n            execute_user_name:this.state.login_user_name\n        };\n        let file_execute_dict = {};\n        for ( var item=0;item<this.state.view_submit_split_sql_info.length;item++){\n            file_execute_dict[this.state.view_submit_split_sql_info[item][\"split_seq\"]] = this.state.view_submit_split_sql_info[item][\"dba_execute\"]\n            if (this.state.view_submit_split_sql_info[item][\"split_sql_file_path\"] === split_sql_file_path){\n                var current_split_seq = this.state.view_submit_split_sql_info[item][\"split_seq\"]\n            }\n        }\n        let inception_error_level_rray=[];\n        for(var i=0;i<this.state.view_check_sql_result.length;i++){\n            inception_error_level_rray.push(this.state.view_check_sql_result[i][\"inception_error_level\"])\n        };\n        if (this.state.sql_check_max_code === 2){\n           message.error(\"审核存在错误,请先处理错误\")\n        }else if (this.state.inception_check_ignore_warning === 0 && this.state.sql_check_max_code === 1){\n            message.error(\"审核存在警告,请处理警告或忽略警告执行\")\n        }else if (current_split_seq !== 1 && file_execute_dict[current_split_seq -1] !== \"已执行\"){\n            message.error(\"上面SQL执行完毕下面SQL才能执行\")\n        }else {\n            if (this.state.execute_sql_flag !== split_sql_file_path) {\n                this.setState({\n                    execute_sql_flag: split_sql_file_path\n                });\n                await axios.post(`${backendServerApiRoot}/execute_submit_sql_by_file_path/`, {params}).then(\n                    res => {\n                        res.data.status === \"ok\" ? message.success(res.data.message,3) && this.setInterVal() : message.error(res.data.message);\n                    }\n                );\n            } else {\n                message.error(\"该工单正在执行,请误多次点击!!!\");\n            }\n        }\n    };\n    //手动执行SQL\n    async ExecuteBySplitSqlFilePathManual(split_sql_file_path) {\n        this.setState({\n            execute_status: \"执行中\"\n        });\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            split_sql_file_path:split_sql_file_path\n        };\n        await axios.post(`${backendServerApiRoot}/execute_submit_sql_by_file_path_manual/`, {params}).then(\n            res => {\n                res.data.status === \"ok\" ? this.GetSqlApplyByUuid(this.state.submit_sql_uuid) && message.success(res.data.message) : message.error(res.data.message);\n            })\n    };\n\n    //inception变量配置Modal显示\n    async ShowInceptionVariableConfigModal(split_sql_file_path) {\n        let params = {\n            split_sql_file_path:split_sql_file_path\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_inception_variable_config_info/`,{params});\n        console.log(res.data);\n        this.setState({\n            data: res.data.data,\n        });\n        this.cacheData = this.state.data.map(item => ({ ...item }))\n        this.setState({\n            InceptionVariableConfigModalVisible: true,\n            split_sql_file_path:split_sql_file_path\n        });\n    }\n    //拆分SQL预览\n    async ViewSplitSQL(split_sql_file_path){\n        let params = {\n            split_sql_file_path:split_sql_file_path\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_submit_split_sql_by_file_path/`,{params});\n        if (res.data.status===\"ok\"){\n            this.setState({\n                SplitSQLModalVisible: true,\n                submit_split_sql:res.data.data\n            });\n        }else {\n            message.error(res.data.message)\n        }\n\n    }\n\n    //查看执行SQL结果\n    async ViewExecuteSubmitSqlResultsByUuid(split_sql_file_path) {\n        console.log(split_sql_file_path)\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            split_sql_file_path:split_sql_file_path\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_execute_results_by_split_sql_file_path/`,{params});\n        this.setState({\n            execute_sql_results: res.data.data,\n            ViewExecuteSubmitSqlModalVisible:true,\n        });\n    };\n    //生成重做SQL忽略错误SQL\n    async RecreateSql(split_sql_file_path,flag) {\n        console.log(split_sql_file_path,flag)\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            split_sql_file_path:split_sql_file_path,\n            recreate_sql_flag: flag\n        };\n        let res = await axios.post(`${backendServerApiRoot}/recreate_sql/`,{params});\n        window.location.reload()\n        message.error(res.data.message)\n        console.log(res)\n    };\n\n\n    //查看进度\n    async getExecuteProcessByUuid(split_sql_file_path) {\n        let params = {\n            submit_sql_uuid: this.state.submit_sql_uuid,\n            split_sql_file_path:split_sql_file_path\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_execute_process_by_uuid/`,{params});\n        this.setState({\n            execute_sql_process_results: res.data.data,\n            ViewExecuteSubmitSqlProcessModalVisible:true,\n            split_sql_file_path:split_sql_file_path\n        });\n        this.timerProcessId = window.setInterval(this.getExecuteProcessByUuidTimeInterval.bind(this),1000);\n    }\n    //定时查看进度，并更新进度到表里\n    async getExecuteProcessByUuidTimeInterval() {\n        let params = {\n            split_sql_file_path:this.state.split_sql_file_path,\n            submit_sql_uuid: this.state.submit_sql_uuid,\n        };\n        let res = await axios.post(`${backendServerApiRoot}/get_execute_process_by_uuid/`,{params});\n        if (res.data.data.length>0 && res.data.data[0][\"inception_execute_percent\"]!==0){\n            this.setState({\n                execute_sql_process_results: res.data.data\n            });\n        }else {\n            this.setState({\n                ViewExecuteSubmitSqlProcessModalVisible:false\n            });\n        }\n    }\n\n     //是否备份选择框\n    async inceptionBackupCheckBoxOnChange(e) {\n        console.log(\"inception_backup\", e.target.checked);\n        e.target.checked ? console.log(\"备份\") : console.log(\"不备份\")\n        e.target.checked ? this.setState({inception_backup:1}) : this.setState({inception_backup:0})\n    }\n    //忽略inception警告选择框\n    async inceptionIgnoreWarningCheckBoxOnChange(e) {\n        console.log(\"inception_execute_ignore_error\", `checked = ${e.target.checked}`);\n        e.target.checked ? console.log(\"忽略inception警告选择框\") : console.log(\"不忽略inception警告选择框\")\n        e.target.checked ? this.setState({inception_check_ignore_warning:1}) : this.setState({inception_check_ignore_warning:0})\n    }\n    //忽略inception错误继续执行选择框\n    async inceptionIgnoreErrorCheckBoxOnChange(e) {\n        console.log(`checked = ${e.target.checked}`);\n        e.target.checked ? console.log(\"忽略inception错误继续执行选择框\") : console.log(\"不忽略inception错误继续执行选择框\")\n        e.target.checked ? this.setState({inception_execute_ignore_error:1}) : this.setState({inception_execute_ignore_error:0})\n    }\n    //获取inception变量配置\n    async GetInceptionVariableConfig() {\n        let res = await axios.get(`${backendServerApiRoot}/get_inception_variable_config_info/`);\n        console.log(res.data);\n        this.setState({\n            data: res.data.data,\n        });\n        this.cacheData = this.state.data.map(item => ({ ...item }))\n    }\n    //更新inception osc变量\n    async handleUpdateInceptionVariable() {\n        let params = {\n            split_sql_file_path: this.state.split_sql_file_path,\n            new_config_json: this.state.newConfig,\n        };\n        axios.post(`${backendServerApiRoot}/update_inception_variable/`,{params}).then(\n           res => {res.data.status===\"ok\" ? message.success(res.data.message) : message.error(res.data.message)}\n        ).catch(err => {message.error(err.message)})\n        this.setState({\n            InceptionVariableConfigModalVisible: false\n        });\n    }\n\n  inception_varialbes_columns = [{\n    title: '参数名称',\n    dataIndex: 'name',\n    width: '25%',\n    render: (text, record) => this.renderColumns(text, record, 'name')\n  }, {\n    title: '参数含义',\n    dataIndex: 'variable_description',\n    width: '45%',\n    render: (text, record) => this.renderColumns(text, record, 'variable_description')\n  }, {\n    title: '值',\n    dataIndex: 'value',\n    width: '10%',\n    render: (text, record) => this.renderColumns(text, record, 'value')\n  }, {\n    title: '操作',\n    dataIndex: 'operation',\n    render: (text, record) => {\n      return (\n        <div className=\"editable-row-operations\">\n          {\n            this.state.editingKey === record.name ?\n              <span>\n                <Button onClick={() => this.cancel(record.name)} type='primary' size='small'>取消</Button>\n                <Popconfirm title=\"确认保存 ?\" onConfirm={() => this.save(record.name)} okText=\"确认\" cancelText=\"取消\">\n                  <Button type='primary' size='small' style={{marginLeft: '10px'}}>保存</Button>\n                </Popconfirm>\n              </span>\n              : <Button onClick={() => this.edit(record.name)} disabled={!record.editable} type='primary' size='small'>修改</Button>\n          }\n        </div>\n      );\n    }\n  }];\n\n  renderColumns(text, record, column) {\n    return (\n      <EditableCell\n        editable={column === 'value' && record.editable && this.state.editingKey === record.name}\n        value={text}\n        onChange={value => this.handleChange(value, record.name, column)}\n      />\n    );\n  }\n  handleChange(value, key, column) {\n    const newData = [...this.state.data];\n    const target = newData.filter(item => key === item.name)[0];\n    if (target) {\n      target[column] = value;\n      let newCfg = {}\n      newCfg[key] = value\n      this.setState({ data: newData, newClusterCfg: newCfg } , () => console.log(this.state.newClusterCfg))\n\n  }}\n  edit(key) {\n    if(this.state.editingKey !== ''){\n        this.cancel(this.state.editingKey)\n        this.setState({editingKey: key})\n    }else{\n        this.setState({editingKey: key})\n    }\n\n  }\n  // 修改集群的配置\n  save(key) {\n    const newData = [...this.state.data];\n    const target = newData.filter(item => key === item.name)[0];       //原始行记录target.value,target.name\n    const cacheData =  [...this.cacheData];\n    const cacheTarget = cacheData.filter(item => key === item.name)[0];   //新行记录cacheTarget.value,cacheTarget.name\n      let newConfigJson = this.state.newConfig\n    if (target) {\n      if(this.state.newClusterCfg[this.state.editingKey] && cacheTarget.value !== target.value){\n          newConfigJson[key]=target.value\n          this.setState({newConfig:newConfigJson})\n          console.log(\"当前incption配置\",this.state.newConfig)\n      }else{\n          console.log(\"不知道\",)\n      }\n      this.setState({ data: newData, editingKey: '' }, () => this.cacheData = this.state.data.map(item => ({ ...item })));\n    }\n  }\n  cancel(key) {\n    const newData = [...this.state.data];\n    const target = newData.filter(item => key === item.name)[0];\n    if (target) {\n      Object.assign(target, this.cacheData.filter(item => key === item.name)[0]);\n      this.setState({ data: newData, editingKey:'' });\n    }\n  }\n    render() {\n        const temp = {}; // 当前重复的值,支持多列\n        const mergeCells = (text, array, columns) => {\n          let i = 0;\n          if (text !== temp[columns]) {\n            temp[columns] = text;\n            array.forEach((item) => {\n                console.log(item.split_seq)\n              if (item.split_seq === temp[columns]) {\n                i += 1;\n              }\n            });\n          }\n          return i;\n        };\n        const execute_results_columns = [\n            {\n              title: 'Id',\n              dataIndex: 'inception_id',\n              key: \"inception_id\",\n              width:50,\n            },\n            {\n              title: '错误代码',\n              dataIndex: 'inception_error_level',\n              key:\"inception_error_level\",\n              width:100,\n              sorter: (a, b) => {\n                var stringA = a.inception_error_level.toUpperCase(); // ignore upper and lowercase\n                var stringB = b.inception_error_level.toUpperCase(); // ignore upper and lowercase\n                if (stringA < stringB) {\n                    return -1;\n                }\n                if (stringA > stringB) {\n                    return 1;\n                }\n                // names must be equal\n                return 0;\n            }\n            },\n            {\n              title: '阶段',\n              dataIndex: 'inception_stage',\n              key:\"inception_stage\",\n              width:100,\n            },\n            {\n              title: '错误信息',\n              dataIndex: 'inception_error_message',\n              key:\"inception_error_message\",\n              width:540,\n            },\n            {\n              title: 'sql',\n              dataIndex: 'inception_sql',\n              key:\"inception_sql\",\n              width:540,\n            },\n            {\n              title: '实际影响行数',\n              dataIndex: 'inception_affected_rows',\n              key: \"inception_affected_rows\"\n            }\n            ,\n            {\n              title: '执行时间',\n              dataIndex: 'inception_execute_time',\n              key: \"inception_execute_time\",\n              width:90,\n            },\n\n        ];\n        const execute_process_columns = [\n            {\n              title: 'sql',\n              dataIndex: 'inception_sql',\n              key: \"inception_sql\",\n            },\n            {\n              title: '执行进度(%)',\n              dataIndex: 'inception_execute_percent',\n              key:\"inception_execute_percent\",\n            }\n        ];\n        const check_results_columns = [\n            {\n              title: 'ID',\n              dataIndex: 'inception_id',\n              key: \"inception_id\",\n            },\n            {\n              title: 'SQL',\n              dataIndex: 'inception_sql',\n              key: \"inception_sql\",\n              width:500\n            },\n            {\n              title: '状态',\n              dataIndex: 'inception_stage_status',\n              key:\"inception_stage_status\",\n            },\n            {\n              title: '错误代码',\n              dataIndex: 'inception_error_level',\n              key:\"inception_error_level\",\n              sorter: (a, b) => a.inception_error_level - b.inception_error_level,\n            },\n            {\n              title: '错误信息',\n              dataIndex: 'inception_error_message',\n              key:\"inception_error_message\",\n            },\n            {\n              title: '影响行数',\n              dataIndex: 'inception_affected_rows',\n              key:\"inception_affected_rows\",\n            }\n        ];\n        return (\n            <section>\n                <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >\n                        <Link className=\"title-text\" to=\"/AuditSqlIndex\">\n                            SQL审核\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"padding-container\">\n                    <h3>申请基础信息</h3>\n                    <Row type='flex' justify=\"space-around\">\n                        <Col span={11} className=\"col-detail\">\n                            <Row gutter={8}><Col style={{padding:5}} span={8}>主题:</Col><Col style={{padding:5}} span={16}>{this.state.submit_sql_title}</Col></Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={8}>SQL预览:</Col>\n                                <Button className=\"link-button\" loading={this.state.sql_view_loading} onClick={this.GetSubmitSqlByUuid.bind(this)} style={{padding:5}} span={16}>查看</Button>\n                            </Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={8}>SQL审核结果:</Col>\n                                <Col >\n                                    <Button style={{padding:5}} span={16} className=\"link-button\" loading={this.state.sql_check_results_loading} onClick={() => this.setState({showSubmitSqlResultsVisible:true})} >查看</Button>\n                                    {this.state.sql_check_max_code !== 0 ? <span style={{color:\"red\"}}>{[this.state.sql_check_code_explain]}</span>:<span  style={{color:\"#52c41a\"}}>[正常]</span>}\n                                </Col>\n                            </Row>\n                            <Row gutter={8}><Col style={{padding:5}} span={8}>SQL总条数:</Col><Col style={{padding:5}} span={16}>{this.state.submit_sql_rows}</Col></Row>\n                            <Row gutter={8}><Col style={{padding:5}} span={8}>SQL预计影响总行数:</Col><Col style={{padding:5}} span={16}>{this.state.submit_sql_affect_rows}</Col></Row>\n                            <Row gutter={8}><Col style={{padding:5}} span={8}>请求描述:</Col><Col style={{padding:5}} span={16}>{this.state.comment_info}</Col></Row>\n                            <Row gutter={8}><Col style={{padding:5}} span={8}>执行类型:</Col><Col style={{padding:5}} span={16}>{this.state.submit_sql_execute_type}</Col></Row>\n                        </Col>\n                        <Col span={11} className=\"col-detail\">\n                            {!this.state.cluster_name ? <Row gutter={8}><Col style={{padding:5}} span={6}>集群主库ip:</Col><Col style={{padding:5}} span={18}>{this.state.master_ip}</Col></Row>:null}\n                            {!this.state.cluster_name ? <Row gutter={8}><Col style={{padding:5}} span={6}>集群主库port:</Col><Col style={{padding:5}} span={18}>{this.state.master_port}</Col></Row>:null}\n                            {this.state.cluster_name ? <Row gutter={8}><Col style={{padding:5}} span={6}>集群名:</Col><Col style={{padding:5}} span={18}>{this.state.cluster_name}</Col></Row>:null}\n                            <Row gutter={8}><Col style={{padding:5}} span={6}>申请者:</Col><Col style={{padding:5}} span={18}>{this.state.submit_sql_user}</Col></Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={6}>Leader:</Col>\n                                <Col style={{padding:5}} span={18}>\n                                    [{this.state.leader_user_name}]\n                                        {this.state.leader_check===\"通过\" ? <span style={{color:\"#52c41a\"}}>[{this.state.leader_check}]</span>:<span  style={{color:\"red\"}}>[{this.state.leader_check}]</span>}\n                                </Col>\n                            </Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={6}>QA:</Col>\n                                <Col style={{padding:5}} span={18}>\n                                    [{this.state.qa_user_name}]\n                                    {this.state.qa_check === \"通过\" ? <span style={{color:\"#52c41a\"}}>[{this.state.qa_check}]</span>:<span  style={{color:\"red\"}}>[{this.state.qa_check}]</span>}\n                                </Col>\n                            </Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={6}>审核DBA:</Col>\n                                <Col style={{padding:5}} span={18}>\n                                    [{this.state.dba_check_user_name}]\n                                    {this.state.dba_check === \"通过\" ? <span style={{color:\"#52c41a\"}}>[{this.state.dba_check}]</span>:<span  style={{color:\"red\"}}>[{this.state.dba_check}]</span>}\n                                </Col>\n                            </Row>\n                            <Row gutter={8}>\n                                <Col style={{padding:5}} span={6}>执行DBA:</Col>\n                                <Col style={{padding:5}} span={18}>\n                                    [{this.state.dba_execute_user_name}]\n                                    {this.state.dba_execute === \"已执行\" ? <span style={{color:\"#52c41a\"}}>[{this.state.dba_execute}]</span>:<span  style={{color:\"red\"}}>[{this.state.dba_execute}]</span>}\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <br/>\n                    {(this.state.login_user_name_role===\"dba\" || this.state.login_user_name_role===\"leader\" || this.state.login_user_name_role===\"qa\") && this.state.sql_check_results_loading===false ?\n                        <div>\n                            <h3>审核操作</h3>\n                            <div className=\"input-padding\">\n                                { (this.state.leader_check===\"未审核\" && this.state.login_user_name_role===\"leader\") ? <Button type=\"primary\" style={{marginLeft:16}} onClick={() => this.setState({ApplyModalVisible:true})}>审核</Button>:null}\n                                { (this.state.qa_check === '未审核' && this.state.login_user_name_role===\"qa\") ? <Button type=\"primary\" style={{marginLeft:16}} onClick={() => this.setState({ApplyModalVisible:true})}>审核</Button>:null}\n                                { (this.state.dba_check === '未审核' && this.state.login_user_name_role===\"dba\") ? <Button type=\"primary\" style={{marginLeft:16}} onClick={() => this.setState({ApplyModalVisible:true})}>审核</Button>:null}\n\n                            </div>\n                        </div>\n                        :\n                        null\n                    }\n                    <br/>\n                    {this.state.login_user_name_role===\"dba\" && this.state.sql_check_results_loading===false ?\n                        <div>\n                            <div>\n                                <h3>执行选项</h3>\n                                <Checkbox defaultChecked onChange={this.inceptionBackupCheckBoxOnChange.bind(this)}>备份</Checkbox>\n                                <Checkbox onChange={this.inceptionIgnoreWarningCheckBoxOnChange.bind(this)}>忽略inception警告</Checkbox>\n                                <Checkbox onChange={this.inceptionIgnoreErrorCheckBoxOnChange.bind(this)}>忽略inception错误强制执行</Checkbox>\n                            </div>\n                            <Table\n                                pagination={false}\n                                dataSource={this.state.view_submit_split_sql_info}\n                                rowKey={(row ,index) => index}\n                                size=\"small\"\n                                bordered\n                            >\n                                <Column title=\"split_seq\"\n                                        dataIndex='split_seq'\n                                        key='split_seq'\n                                        render={(text, row) => {\n                                            const obj = {\n                                                children: text,\n                                                props: {},\n                                            };\n                                            obj.props.rowSpan = mergeCells(row.split_seq, this.state.view_submit_split_sql_info, 'split_seq');\n                                            return obj;\n                                        }}\n                                />\n                                <Column title=\"SQL路径\" dataIndex=\"split_sql_file_path\" width={300}/>\n                                <Column title=\"SQL\"\n                                        render={(text, row) => <button className=\"link-button\" onClick={()=>{this.ViewSplitSQL(row.split_sql_file_path)}}>查看</button>}\n                                />\n                                <Column title=\"OSC配置\"\n                                        dataIndex=\"inception_osc_config\"\n                                        render = {(text, row) => this.state.dba_check ===\"通过\" && this.state.execute_status !== '执行中' ? <button className=\"link-button\" onClick={()=>{this.ShowInceptionVariableConfigModal(row.split_sql_file_path)}}>OSC配置</button>: null}\n                                />\n                                <Column title=\"执行SQL\"\n                                        render={(text, row) => {\n                                            if (this.state.dba_check ===\"通过\" && row.execute_status === '未执行' && this.state.login_user_name_role===\"dba\")  {\n                                                return (\n                                                    <div>\n                                                        <Button className=\"link-button\" onClick={()=>{this.ExecuteBySplitSqlFilePath(row.split_sql_file_path)}}>平台执行</Button>\n                                                        <Button className=\"link-button\" style={{marginLeft:15}} onClick={()=>{this.ExecuteBySplitSqlFilePathManual(row.split_sql_file_path)}}>手动执行</Button>\n                                                    </div>\n\n                                                )\n                                            }\n                                        }}\n                                />\n                                <Column title=\"查看进度\"\n                                        render={(text, row) => {\n                                            if (this.state.dba_check ===\"通过\" && row.execute_status === '执行中')  {\n                                                return (<button className=\"link-button\" onClick={()=>{this.getExecuteProcessByUuid(row.split_sql_file_path)}}>查看</button>)\n                                            }\n                                        }}\n                                />\n                                <Column title=\"查看结果\"\n                                        render={(text, row) => {\n                                            if (row.execute_status === '执行成功' || row.execute_status === '执行失败' || row.execute_status === '执行成功(含警告)')  {\n                                                return (<button className=\"link-button\" onClick={()=>{this.ViewExecuteSubmitSqlResultsByUuid(row.split_sql_file_path)}}>查看</button>)\n                                            }\n                                        }}\n                                />\n                                <Column title=\"执行结果\"\n                                        dataIndex=\"execute_status\"\n                                        render={(val, row) => {\n                                            if (val === \"执行成功\"){\n                                                return <span style={{color:\"#52c41a\"}}>{val}</span>\n                                            }else if (val === \"执行失败\" && row.rerun_flag !==0 ){\n                                                //React.Fragment可以包含多个元素,使用div可以实现换行功能\n                                                return <React.Fragment>\n                                                           <div><span style={{color:\"#fa541c\"}}>{val}</span></div>\n                                                           <div><button className=\"link-button\" onClick={()=>{this.RecreateSql(row.split_sql_file_path,\"include_error_sql\")}}>生成重做SQL含错误SQL</button></div>\n                                                           <div><button className=\"link-button\" onClick={()=>{this.RecreateSql(row.split_sql_file_path,\"ignore_error_sql\")}}>生成重做SQL忽略错误SQL</button></div>\n                                                       </React.Fragment>\n                                            }else if (val === '执行成功(含警告)'){\n                                                return <span style={{color:\"#ffbb96\"}}>{val}</span>\n                                            }else {\n                                                return <span style={{color:\"#bfbfbf\"}}>{val}</span>\n                                            }\n                                        }}\n                                />\n                                <Column title=\"执行方式\" dataIndex=\"submit_sql_execute_plat_or_manual\"/>\n                                <Column title=\"耗时(秒)\" dataIndex=\"inception_execute_time\"/>\n                            </Table>\n                        </div>\n\n                        :null\n                    }\n                    <Modal visible={this.state.showSubmitSqlViewVisible}\n                        onCancel={() => this.setState({showSubmitSqlViewVisible:false})}\n                        title=\"SQL预览\"\n                        footer={false}\n                        width={960}\n                    >\n                        <TextArea wrap=\"off\" style={{minHeight:300,overflow:\"scroll\"}} value={this.state.submit_sql}/>\n                    </Modal>\n                    <Modal visible={this.state.showSubmitSqlResultsVisible}\n                        onCancel={() => this.setState({showSubmitSqlResultsVisible:false})}\n                        title=\"SQL审核结果\"\n                        footer={false}\n                        width={1200}\n                    >\n                        <Table\n                            dataSource={this.state.view_check_sql_result}\n                            rowKey={(row ,index) => index}\n                                                    rowClassName={(record, index) => {\n                                                let className = 'row-detail-default ';\n                                                if (record.inception_error_level === 2) {\n                                                    className = 'row-detail-error';\n                                                    return className;\n                                                }else if (record.inception_error_level  === 0){\n                                                    className = 'row-detail-success';\n                                                    return className;\n                                                }else if (record.inception_error_level  === 1){\n                                                    className = 'row-detail-warning';\n                                                    return className;\n                                                }else {\n                                                    return className;\n                                                }\n                                    }}\n                            pagination={true}\n                            size=\"small\"\n                            columns={check_results_columns}\n                        >\n                        </Table>\n                    </Modal>\n                    <Modal visible={this.state.ApplyModalVisible}\n                        onCancel={() => this.setState({ApplyModalVisible:false})}\n                        title=\"审核\"\n                        footer={false}\n                    >\n                        <TextArea rows={6} placeholder=\"审核说明\"  onChange={e => this.setState({check_comment:e.target.value})}/>\n                        <Row type=\"flex\" justify='center' style={{ marginTop: '10px' }}>\n                            <Button onClick={this.PassSubmitSqlByUuid.bind(this,'通过')} loading={this.state.sql_check_pass_loading} type=\"primary\" style={{ marginRight: '10px' }}>通过</Button>\n                            <Button onClick={this.PassSubmitSqlByUuid.bind(this,'不通过')} loading={this.state.sql_check_pass_loading} type=\"primary\">不通过</Button>\n                        </Row>\n                    </Modal>\n                    <Modal visible={this.state.ViewExecuteSubmitSqlModalVisible}\n                        onCancel={() => this.setState({ViewExecuteSubmitSqlModalVisible:false})}\n                        title=\"执行结果\"\n                        footer={false}\n                        width={1340}\n                    >\n                    <Table\n                        dataSource={this.state.execute_sql_results}\n                        columns={execute_results_columns}\n                        bordered\n                        rowKey={(row ,index) => index}\n                        rowClassName={(record, index) => {\n                                                let className = 'row-detail-default ';\n                                                if (record.inception_error_level === \"执行失败\") {\n                                                    className = 'row-detail-error';\n                                                    return className;\n                                                }else if (record.inception_error_level  === \"执行成功\"){\n                                                    className = 'row-detail-success';\n                                                    return className;\n                                                }else if (record.inception_error_level  === \"执行成功(含警告)\"){\n                                                    className = 'row-detail-warning';\n                                                    return className;\n                                                }else {\n                                                    return className;\n                                                }\n                        }}\n                        size=\"small\"\n                    />\n                    </Modal>\n                    <Modal visible={this.state.ViewExecuteSubmitSqlProcessModalVisible}\n                        onCancel={() => this.setState({ViewExecuteSubmitSqlProcessModalVisible:false})}\n                        title=\"执行进度\"\n                        footer={false}\n                        width={1340}\n                    >\n                        <Table\n                            dataSource={this.state.execute_sql_process_results}\n                            columns={execute_process_columns}\n                            bordered\n                            size=\"small\"\n                        />\n                    </Modal>\n                    <Modal visible={this.state.InceptionVariableConfigModalVisible}\n                        onCancel={() => this.setState({InceptionVariableConfigModalVisible:false})}\n                        title=\"inception变量配置\"\n                        footer={false}\n                        width={1240}\n                    >\n                        <Table dataSource={this.state.data} pagination={false} columns={this.inception_varialbes_columns} rowKey={(row) => row.name} size={\"small\"}/>\n                        <Button type={\"primary\"} onClick={this.handleUpdateInceptionVariable.bind(this)}>提交更改</Button>\n                    </Modal>\n                    <Modal visible={this.state.SplitSQLModalVisible}\n                        onCancel={() => this.setState({SplitSQLModalVisible:false})}\n                        title=\"SQL预览\"\n                        footer={false}\n                        width={960}\n                    >\n                        <TextArea wrap=\"off\" style={{minHeight:300,overflow:\"scroll\"}} value={this.state.submit_split_sql}/>\n                    </Modal>\n                </div>\n                </div>\n            </section>\n        )\n    }\n}","import React,{Component} from 'react';\nimport axios from 'axios'\nimport { Table, Input } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\nconst server = 'http://127.0.0.1:8000';\n\n\nexport default class mysqlCluster extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cluster_info:[],\n        }\n    }\n\n    componentDidMount() {\n        this.GetClusterInfo()\n    }\n    //获取所有集群信息\n    async GetClusterInfo() {\n        let res = await axios.get(`${server}/get_cluster_info/`);\n        console.log(res.data);\n        console.log(window && window.location && window.location.hostname);\n        this.setState({\n            cluster_info: res.data.data\n        })\n    }\n    //模糊搜索\n    async GetSearchClusterInfo(cluster_name) {\n        this.setState({\n            cluster_info: []\n        })\n        let res = await axios.post(`${server}/get_search_cluster_info/`,{cluster_name});\n        console.log(res.data);\n        this.setState({\n            cluster_info: res.data.data\n        })\n    }\n\n    render() {\n        let {cluster_info} = this.state;\n        const temp = {}; // 当前重复的值,支持多列\n        const mergeCells = (text, array, columns) => {\n          let i = 0;\n          if (text !== temp[columns]) {\n            temp[columns] = text;\n            array.forEach((item) => {\n              if (item.cluster_name === temp[columns]) {\n                i += 1;\n              }\n            });\n          }\n          return i;\n        };\n        const columns = [\n          {\n            title: 'cluster_name',\n            dataIndex: 'cluster_name',\n            key: 'cluster_name',\n            render: (text, record) => {\n              const obj = {\n                children: text,\n                props: {},\n              };\n              obj.props.rowSpan = mergeCells(record.cluster_name, cluster_info, 'cluster_name');\n              return obj;\n            },\n          },\n          {\n            title: 'cluster_type',\n            dataIndex: 'cluster_type',\n          },\n          {\n            title: 'cluster_status',\n            dataIndex: 'cluster_status',\n          },\n          {\n            title: 'instance_name',\n            colSpan: 1,\n            dataIndex: 'instance_name',\n          },\n          {\n            title: 'role',\n            dataIndex: 'role',\n          },\n        ];\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/mysqlCluster\">\n                            集群信息\n                        </Link>\n                    </div>\n                    <div>\n                        <Search\n                          placeholder=\"集群名\"\n                          onSearch={value => this.GetSearchClusterInfo(value)}\n                          style={{ width: 200 }}\n                          allowClear\n                        />\n                    </div>\n                </div>\n            <div>\n            </div>\n                <Table dataSource={this.state.cluster_info} columns={columns} bordered />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport axios from 'axios'\nimport { Button, Input,Form,Row,Card,Checkbox,message} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport {getUser} from \"../common/util\";\n\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst server = 'http://127.0.0.1:8000';\nconst FormItem = Form.Item;\nconst CheckboxGroup = Checkbox.Group;\n\nconst plainOptions = ['insert,delete,update', 'select', 'create','drop','alter','replication slave,replication client'];\nconst defaultCheckedList = ['select'];\n\nexport default class CreatePrivateUser extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_info:[],\n            showDataVisible: false,\n            confirmLoading: false,\n            checkedList: defaultCheckedList,\n            indeterminate: true,\n            login_user_name:\"\",\n            login_user_name_role:\"\",\n        }\n    }\n\n    componentDidMount() {\n        getUser().then(res => {\n            this.setState({\n                login_user_name: res.data.username,\n                login_user_name_role: res.data.title,\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n\n    };\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            let params = {\n                grant_db_master_ip: values[\"DB_master_ip\"],\n                grant_db_master_port: values[\"DB_master_port\"],\n                grant_user_name: values[\"User_name\"],\n                grant_user_host: values[\"User_ip\"],\n                grant_database: values[\"Database\"],\n                grant_table: values[\"Table\"],\n                grant_dev_name: this.state.login_user_name,\n                grant_privileges : this.state.checkedList.join(\",\")\n            };\n            axios.post(`${server}/privileges_create_user_info/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message) && this.props.form.resetFields() : message.error(res.data.message)}\n            ).catch(err => {message.error(err.message)});\n            this.setState({\n                showDataVisible: false\n            });\n\n        });\n        //this.props.form.resetFields();\n        //window.location.reload();\n    };\n\n    onChange = checkedList => {\n        console.log(checkedList.join(\",\"));\n        this.setState({\n          checkedList,\n          indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n          checkAll: checkedList.length === plainOptions.length,\n        });\n      };\n\n      onCheckAllChange = e => {\n        this.setState({\n          checkedList: e.target.checked ? plainOptions : [],\n          indeterminate: false,\n          checkAll: e.target.checked,\n        });\n      };\n\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className=\"server-list\">\n                <div>\n                    <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleSubmit}>\n                        <Row gutter={20}>\n                            <Card>\n                                <FormItem  label='DB_master_ip'>\n                                    {getFieldDecorator('DB_master_ip', {rules: [{required: true, message: '请输入DB_master_ip'}],})(<Input style={{ width: '20%' }} placeholder='请输入DB_master_ip'/>)}\n                                </FormItem>\n                                <FormItem  label='DB_master_port'>\n                                    {getFieldDecorator('DB_master_port', {rules: [{required: true, message: '请输入DB_master_port'}],})(<Input style={{ width: '20%' }} placeholder='请输入DB_master_port'/>)}\n                                </FormItem>\n                                <FormItem  label='User_name'>\n                                    {getFieldDecorator('User_name', {rules: [{required: true, message: '请输入User_name'}],})(<Input style={{ width: '20%' }} placeholder='请输入User_name'/>)}\n                                </FormItem>\n                                <FormItem  label='User_ip'>\n                                    {getFieldDecorator('User_ip', {rules: [{required: true, message: '请输入User_ip'}],})(<Input style={{ width: '20%' }} placeholder='请输入User_ip'/>)}\n                                </FormItem>\n                                <FormItem  label='Database'>\n                                    {getFieldDecorator('Database', {rules: [{required: true, message: '请输入需要授权的Database'}]})(<Input style={{ width: '20%' }} placeholder='请输入需要授权的Database'/>)}\n                                </FormItem>\n                                <FormItem  label='Table'>\n                                    {getFieldDecorator('Table', {rules: [{required: true, message: '请输入需要授权的Table'}]})(<Input style={{ width: '20%' }} placeholder='请输入需要授权的Table'/>)}\n                                </FormItem>\n                                <FormItem  label='Privileges'>\n                                    {getFieldDecorator('Privileges')\n                                    (<div>\n                                        <CheckboxGroup\n                                          options={plainOptions}\n                                          value={this.state.checkedList}\n                                          onChange={this.onChange}\n                                        />\n                                      </div>)\n                                    }\n                                </FormItem>\n                            </Card>\n                            <Button type=\"primary\" htmlType=\"submit\">submit</Button>\n                        </Row>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\nCreatePrivateUser = Form.create()(CreatePrivateUser);\n","import React from 'react';\nimport axios from 'axios'\nimport {Button, Input, Form, Row, Card, Checkbox, message, Table} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport {getUser} from \"../common/util\";\n\n\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst server = 'http://127.0.0.1:8000';\nconst FormItem = Form.Item;\nconst CheckboxGroup = Checkbox.Group;\nconst Column = Table.Column;\n\nconst plainOptions = ['insert,delete,update', 'select', 'create','drop','alter','replication slave,replication client'];\nconst defaultCheckedList = ['select'];\n\nexport default class PrivilegesExtend extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_info:[],\n            showDataVisible: false,\n            confirmLoading: false,\n            checkedList: defaultCheckedList,\n            indeterminate: true,\n            login_user_name:\"\",                        //当前登录用户名\n            login_user_name_role:\"\",                   //当前登录用户角色\n            grant_dev_name: \"\",\n            privileges_info:[],\n            grant_db_master_port:\"\",\n            grant_db_master_ip:\"\",\n            grant_user_name:\"\",\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            let params = {\n                grant_db_master_ip: values[\"DB_master_ip\"],\n                grant_db_master_port: values[\"DB_master_port\"],\n                grant_user_name: values[\"User_name\"],\n                grant_dev_name: this.state.login_user_name,\n                grant_privileges : this.state.checkedList.join(\",\")\n            };\n            axios.post(`${server}/privileges_extend_info/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message) && this.props.form.resetFields() : message.error(res.data.message)}\n            ).catch(err => {message.error(err.message)});\n            this.setState({\n                showDataVisible: false\n            });\n\n        });\n        //this.props.form.resetFields();\n        // window.location.reload();\n    };\n\n    componentDidMount() {\n        getUser().then(res => {\n            this.setState({\n                login_user_name: res.data.username,\n                //login_user_name_role: res.data.title,\n                login_user_name_role: res.data.title,\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n\n    }\n\n    async handleViewPrivileges() {\n        let params = {\n            grant_db_master_port:this.state.grant_db_master_port,\n            grant_db_master_ip:this.state.grant_db_master_ip,\n            grant_user_name:this.state.grant_user_name,\n        };\n        console.log(params);\n        axios.post(`${server}/privilege_view_user/`,{params}).then(\n                res => {\n                    console.log(res.data)\n                        this.setState({\n                            privileges_info: res.data\n                        });\n                }\n        ).catch(err => {message.error(err.message)});\n    }\n\n    handleHostPortChange = (value) => {\n        console.log(value)\n        this.setState({\n            grant_db_master_port: value\n        })\n    }\n\n    handleHostIpChange = (value) => {\n        console.log(value)\n        this.setState({\n            grant_db_master_ip: value\n        })\n    }\n\n    handleUserChange = (value) => {\n        console.log(value)\n        this.setState({\n            grant_user_name: value\n        })\n    }\n\n\n    onChange = checkedList => {\n        console.log(checkedList.join(\",\"));\n        this.setState({\n          checkedList,\n          indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n          checkAll: checkedList.length === plainOptions.length,\n        });\n      };\n\n      onCheckAllChange = e => {\n        this.setState({\n          checkedList: e.target.checked ? plainOptions : [],\n          indeterminate: false,\n          checkAll: e.target.checked,\n        });\n      };\n\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className=\"server-list\">\n                <div>\n                    <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleSubmit}>\n                        <Row gutter={20}>\n                            <Card>\n                                <FormItem  label='DB_master_ip'>\n                                    {getFieldDecorator('DB_master_ip', {rules: [{required: true, message: '请输入DB_master_ip'}],})(<Input style={{ width: '20%' }} placeholder='请输入DB_master_ip' onChange={e => this.handleHostIpChange(e.target.value)}/>)}\n                                </FormItem>\n                                <FormItem  label='DB_master_port'>\n                                    {getFieldDecorator('DB_master_port', {rules: [{required: true, message: '请输入DB_master_port'}],})(<Input style={{ width: '20%' }} placeholder='请输入DB_master_port' onChange={e => this.handleHostPortChange(e.target.value)}/>)}\n                                </FormItem>\n                                <FormItem  label='User_name'>\n                                    {getFieldDecorator('User_name', {rules: [{required: true, message: '请输入User_name'}],})(<Input style={{ width: '20%' }} placeholder='请输入User_name' onChange={e => this.handleUserChange(e.target.value)}/>)}\n                                    <Button type=\"primary\" style={{marginLeft:10}} onClick={()=>{this.handleViewPrivileges()}}>查看已有权限</Button>\n                                </FormItem>\n\n                                <FormItem  label='Privileges'>\n                                    {getFieldDecorator('Privileges')\n                                    (<div>\n                                        <CheckboxGroup\n                                          options={plainOptions}\n                                          value={this.state.checkedList}\n                                          onChange={this.onChange}\n                                        />\n                                      </div>)\n                                    }\n                                </FormItem>\n                            </Card>\n                            <Button type=\"primary\" htmlType=\"submit\">submit</Button>\n                        </Row>\n                        <Table\n                                dataSource={this.state.privileges_info}\n                                pagination={{ pageSize: 10 }}\n                                scroll={{ y: 400 }}\n                                rowKey={(row ,index) => index}\n                                size=\"small\"\n                            >\n                                <Column title = '用户名' dataIndex = 'user'/>\n                                <Column title = 'IP' dataIndex = 'host'/>\n                                <Column title = '已有权限' dataIndex = 'privilege'/>\n                                <Column title = '数据库' dataIndex = 'db'/>\n                            </Table>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\nPrivilegesExtend = Form.create()(PrivilegesExtend);\n","import React,{Component} from 'react';\nimport axios from 'axios'\nimport {Table, Input, Form, Tabs} from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport CreatePrivateUser from \"./createPrivateUser\";\nimport PrivilegesExtend from \"./privilegesExtend\";\n\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\nconst server = 'http://127.0.0.1:8000';\nconst { TabPane } = Tabs;\nconst Column = Table.Column;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nclass privateUser extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_info:[],\n            showDataVisible: false,\n            confirmLoading: false,\n        }\n    }\n\n\n    componentDidMount() {\n        this.GetUserInfo()\n\n    }\n    //获取所有用户信息\n    async GetUserInfo() {\n        let res = await axios.get(`${server}/get_private_user_info/`);\n        console.log(res.data);\n        this.setState({\n            user_info: res.data\n        })\n    }\n\n    //模糊搜索\n    async GetSearchUserInfo(user_name) {\n        let res = await axios.post(`${server}/get_private_user_info/`,{user_name});\n        console.log(res.data);\n        this.setState({\n            user_info: res.data\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/privilegesApply\">\n                            用户权限申请\n                        </Link>\n                    </div>\n                    <div>\n                        <Search\n                          placeholder=\"用户名\"\n                          onSearch={value => this.GetSearchUserInfo(value)}\n                          style={{ width: 200 }}\n                          allowClear\n                        />\n                    </div>\n                </div>\n                <div>\n                    <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                        <TabPane tab=\"工单申请表\" key=\"1\">\n                            <Table\n                                dataSource={this.state.user_info}\n                                pagination={{ pageSize: 10 }}\n                                //scroll={{ y: 500 }}     添加滚动条的参数\n                                rowKey={(row ,index) => index}\n                                rowClassName={(record, index) => {\n                                let className = 'row-detail-default ';\n                                if (record.leader_check_result === \"未审核\"||record.dba_check_result === \"未审核\"||record.status === \"未执行\"||record.status === \"执行失败\") className = 'row-detail-error';\n                                return className;}}\n                                size=\"small\"\n                            >\n                                <Column title = '申请人' dataIndex = 'person_name'/>\n                                <Column title = '工单类型' dataIndex = 'request_type'/>\n                                <Column title = '部门' dataIndex = 'department'/>\n                                <Column title = '业务leader' dataIndex = 'leader'/>\n                                <Column title = 'DBA' dataIndex = 'dba'/>\n                                <Column title = 'Leader审核' dataIndex = 'leader_check_result'/>\n                                <Column title = 'DBA审核' dataIndex = 'dba_check_result'/>\n                                <Column title = '工单状态' dataIndex = 'status'/>\n                                <Column title = '申请时间' dataIndex = 'ctime'/>\n                                <Column title=\"操作\"\n                                    render={record => {\n                                        return <Link to={`/viewPrivilegeInfoByUuid/${record.order_uuid}`}>查看</Link>\n                                    }}\n                                />\n                            </Table>\n                        </TabPane>\n                        <TabPane tab=\"添加新用户\" key=\"2\">\n                            <CreatePrivateUser></CreatePrivateUser>\n                        </TabPane>\n                        <TabPane tab=\"扩展权限\" key=\"3\">\n                            <PrivilegesExtend></PrivilegesExtend>\n                        </TabPane>\n                        <TabPane tab=\"扩展IP\" key=\"4\">\n                            <PrivilegesExtend></PrivilegesExtend>\n                        </TabPane>\n                        <TabPane tab=\"扩展库表\" key=\"5\">\n                            <PrivilegesExtend></PrivilegesExtend>\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Form.create()(privateUser);\n","import React from 'react';\nimport axios from 'axios'\nimport {Button, Col, Form, Row, Card, Table, message,Modal,Input,} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport {Link} from \"react-router-dom\";\nimport {getUser} from \"../common/util\";\n\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst server = 'http://127.0.0.1:8000';\nconst Column = Table.Column;\nconst { TextArea } = Input;\n\n\nexport default class OrderInformation extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDataVisible: false,\n            checkOrderVisible:false,   //审核modal是否可见\n            confirmLoading: false,\n            indeterminate: true,\n            dev_name:\"\",               //申请人\n            request_type:\"\",           //工单类型\n            department:\"\",             //部门\n            leader:\"\",                 //业务leader\n            dba:\"\",                    //DBA\n            leader_check_result:\"\",    //业务Leader审核结果\n            dba_check_result:\"\",       //DBA审核结果\n            db_master_ip:\"\",           //数据库地址\n            db_master_port:\"\",         //数据库port\n            user_host:\"\",              //用户host\n            db_name:\"\",                //库名\n            tb_name:\"\",                //表名\n            user_name:\"\",              //用户\n            ctime:\"\",                  //工单创建时间\n            utime:\"\",                  //工单更新时间\n            order_info:[],             //工单信息\n            login_user_name:\"\",        //当前登录用户名\n            login_user_name_role:\"\",   //当前登录用户角色\n\n        }\n    }\n\n    showCheckModal = () => {\n        this.setState({\n          checkOrderVisible: true,\n        });\n      };\n\n\n\n    componentDidMount() {\n        this.GetUserInfo();\n        getUser().then(res => {\n            this.setState({\n                login_user_name: res.data.username,\n                login_user_name_role: res.data.title,\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n\n    }\n\n\n    //获取所有用户信息\n    async GetUserInfo() {\n        console.log(this.props.match.params[\"order_uuid\"]);\n        let params = {\n          order_uuid: this.props.match.params[\"order_uuid\"],\n        };\n        let res = await axios.post(`${server}/get_order_info/`,{params});\n        console.log(res.data);\n        this.setState({\n            dev_name: res.data[0][\"person_name\"],\n            leader: res.data[0][\"leader\"],\n            dba: res.data[0][\"dba\"],\n            department: res.data[0][\"department\"],\n            request_type: res.data[0][\"request_type\"],\n            leader_check_result: res.data[0][\"leader_check_result\"],\n            dba_check_result: res.data[0][\"dba_check_result\"],\n            db_master_port: res.data[0][\"db_master_port\"],\n            db_master_ip: res.data[0][\"db_master_ip\"],\n            user_name: res.data[0][\"user_name\"],\n            execute_status: res.data[0][\"status\"],\n            utime: res.data[0][\"utime\"],\n            ctime: res.data[0][\"ctime\"],\n            order_info:res.data\n        })\n\n    }\n\n    //审核工单-->通过\n    async handleCheckSubmitPass() {\n        console.log(this.props.match.params[\"order_uuid\"]);\n        let params = {\n          order_uuid: this.props.match.params[\"order_uuid\"],\n          check_result:\"通过\",\n          login_user_name_role: this.state.login_user_name_role\n        };\n        console.log(params);\n        axios.post(`${server}/check_order/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message,2) && this.GetUserInfo() : message.error(res.data.message) && this.GetUserInfo()}\n        ).catch(err => {message.error(err.message,2)});\n        this.setState({\n            checkOrderVisible: false\n        });\n\n    }\n\n    //审核工单-->不通过\n    async handleCheckSubmitNoPass() {\n        console.log(this.props.match.params[\"order_uuid\"]);\n        let params = {\n          order_uuid: this.props.match.params[\"order_uuid\"],\n          check_result:\"不通过\",\n          login_user_name_role: this.state.login_user_name_role\n        };\n        console.log(params);\n        axios.post(`${server}/check_order/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message,2) && this.GetUserInfo() : message.error(res.data.message) && this.GetUserInfo()}\n        ).catch(err => {message.error(err.message,2)});\n        this.setState({\n            checkOrderVisible: false\n        });\n\n    }\n\n    //执行工单\n    async handleSqlSubmit() {\n        console.log(this.props.match.params[\"order_uuid\"]);\n        let params = {\n          order_uuid: this.props.match.params[\"order_uuid\"],\n        };\n        console.log(params);\n        axios.post(`${server}/execute_order/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message) && this.GetUserInfo() : message.error(res.data.message) && this.GetUserInfo()}\n        ).catch(err => {message.error(err.message)});\n        this.setState({\n            showDataVisible: false\n        });\n    }\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n          checkOrderVisible: false,\n        });\n    };\n\n\n\n\n    render() {\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/privilegesApply\">\n                            用户权限申请\n                        </Link>\n                    </div>\n                </div>\n\n\n                <div>\n                    <Row gutter={20}>\n                        <Card title=\"申请基础信息\" bordered={false}>\n                            <Col span={8}>\n                                <p>申请人: {this.state.dev_name}</p>\n                                <p>\n                                    leader: {this.state.leader}\n                                    [{this.state.leader_check_result}]\n                                </p>\n                                <p>\n                                    DBA: {this.state.dba}\n                                    [{this.state.dba_check_result}]\n                                </p>\n                                <p>部门: {this.state.department}</p>\n                                <p>工单类型: {this.state.request_type}</p>\n                            </Col>\n                            <Col span={8}>\n                                <p>数据库地址: {this.state.db_master_ip}</p>\n                                <p>数据库端口: {this.state.db_master_port}</p>\n                                <p>工单创建时间: {this.state.ctime}</p>\n                                <p>工单更新时间: {this.state.utime}</p>\n                                <p>执行状态: {this.state.execute_status}</p>\n                            </Col>\n                        </Card>\n                        <Card title=\"权限详细信息\" bordered={false}>\n                            <Table\n                                dataSource={this.state.order_info}\n                                pagination={{ pageSize: 10 }}\n                                scroll={{ y: 400 }}\n                                rowKey={(row ,index) => index}\n                                size=\"small\"\n                            >\n                                <Column title = '用户名' dataIndex = 'user_name'/>\n                                <Column title = '主机列表' dataIndex = 'user_host'/>\n                                <Column title = '数据库列表' dataIndex = 'db_name'/>\n                                <Column title = '权限列表' dataIndex = 'privileges'/>\n                            </Table>\n                        </Card>\n                    </Row>\n                </div>\n                <div>\n                    {this.state.login_user_name_role===\"leader\" && this.state.leader_check_result===\"未审核\" ? <Button type=\"primary\" onClick={()=>{this.showCheckModal()}}>审核</Button>:null}\n                    {this.state.login_user_name_role===\"dba\" && this.state.dba_check_result===\"未审核\" && this.state.leader_check_result===\"通过\" ? <Button type=\"primary\" onClick={()=>{this.showCheckModal()}}>审核</Button>:null}\n                    {this.state.login_user_name_role===\"dba\" && this.state.dba_check_result===\"通过\" && this.state.execute_status===\"未执行\" ? <Button type=\"primary\" onClick={()=>{this.handleSqlSubmit()}}>执行</Button>:null}\n                </div>\n                <Modal\n                    title=\"工单审核\"\n                    visible={this.state.checkOrderVisible}\n                    onCancel={this.handleCancel}\n                    okText= \"通过\"\n                    cancelText= \"不通过\"\n                    footer={null}\n                >\n                    <TextArea></TextArea>\n                        <Button type=\"primary\" onClick={()=>{this.handleCheckSubmitPass()}}>通过</Button>\n                        <Button type=\"primary\" onClick={()=>{this.handleCheckSubmitNoPass()}}>不通过</Button>\n                </Modal>\n\n\n            </div>\n        )\n    }\n}\nOrderInformation = Form.create()(OrderInformation);\n","import React from 'react';\nimport axios from 'axios'\nimport { Button, Input,Form,Row,Card,Checkbox,message} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst server = 'http://127.0.0.1:8000';\nconst FormItem = Form.Item;\nconst CheckboxGroup = Checkbox.Group;\n\nconst plainOptions = ['insert,delete,update', 'select', 'create','drop','alter','replication slave,replication client'];\nconst defaultCheckedList = ['select'];\n\nexport default class CreateCommonUser extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_info:[],\n            showDataVisible: false,\n            confirmLoading: false,\n            checkedList: defaultCheckedList,\n            indeterminate: true,\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            let params = {\n              grant_user_name: values[\"User_name\"],\n              grant_user_host: values[\"Host\"],\n              grant_database: values[\"Database\"],\n              grant_table: values[\"Table\"],\n              grant_privileges : this.state.checkedList.join(\",\")\n            };\n            axios.post(`${server}/grant_user_info/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message) && this.props.form.resetFields() : message.error(res.data.message)}\n            ).catch(err => {message.error(err.message)});\n            this.setState({\n                showDataVisible: false\n            });\n\n        });\n        // this.props.form.resetFields();\n        //window.location.reload();\n    };\n    onChange = checkedList => {\n        console.log(checkedList.join(\",\"));\n        this.setState({\n          checkedList,\n          indeterminate: !!checkedList.length && checkedList.length < plainOptions.length,\n          checkAll: checkedList.length === plainOptions.length,\n        });\n      };\n\n      onCheckAllChange = e => {\n        this.setState({\n          checkedList: e.target.checked ? plainOptions : [],\n          indeterminate: false,\n          checkAll: e.target.checked,\n        });\n      };\n\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className=\"server-list\">\n                <div>\n                    <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleSubmit}>\n                        <Row gutter={20}>\n                            <Card>\n                                <FormItem  label='User_name'>\n                                    {getFieldDecorator('User_name', {rules: [{required: true, message: '请输入User_name'}],})(<Input style={{ width: '20%' }} placeholder='请输入User_name'/>)}\n                                </FormItem>\n                                <FormItem  label='Host'>\n                                    {getFieldDecorator('Host', {rules: [{required: true, message: '请输入Host'}],})(<Input style={{ width: '20%' }} placeholder='请输入Host'/>)}\n                                </FormItem>\n                                <FormItem  label='Database'>\n                                    {getFieldDecorator('Database', {rules: [{required: true, message: '请输入需要授权的Database'}]})(<Input style={{ width: '20%' }} placeholder='请输入需要授权的Database'/>)}\n                                </FormItem>\n                                <FormItem  label='Table'>\n                                    {getFieldDecorator('Table', {rules: [{required: true, message: '请输入需要授权的Table'}]})(<Input style={{ width: '20%' }} placeholder='请输入需要授权的Table'/>)}\n                                </FormItem>\n                                <FormItem  label='Privileges'>\n                                    {getFieldDecorator('Privileges')\n                                    (<div>\n                                        <CheckboxGroup\n                                          options={plainOptions}\n                                          value={this.state.checkedList}\n                                          onChange={this.onChange}\n                                        />\n                                      </div>)\n                                    }\n                                </FormItem>\n                            </Card>\n                            <Button type=\"primary\" htmlType=\"submit\">submit</Button>\n                        </Row>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\nCreateCommonUser = Form.create()(CreateCommonUser);\n","import React from 'react';\nimport axios from 'axios'\nimport { Button, Input,message, Form,Row,Card} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst server = 'http://127.0.0.1:8000';\nconst FormItem = Form.Item;\n\n\n\nexport default  class MigrateCommonUser extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // confirmLoading: false,\n        }\n    }\n\n    handleMigrateSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            let params = {\n              des_master_ip: values[\"des_master_ip\"],\n              des_master_port: values[\"des_master_port\"],\n            };\n            axios.post(`${server}/migrate_common_user/`,{params}).then(\n                res => {res.data.status===\"ok\" ? message.success(res.data.message) : message.error(res.data.message)}\n            ).catch(err => {message.error(err.message)})\n        });\n        this.props.form.resetFields();\n\n    };\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n\n        return (\n            <div className=\"server-list\">\n                <div>\n                    <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleMigrateSubmit}>\n                        <Row gutter={24}>\n                            <Card>\n                                <FormItem  label='des_master_ip'>\n                                    {getFieldDecorator('des_master_ip', {rules: [{required: true, message: '请输入des_master_ip'}],})(\n                                        <Input placeholder='请输入des_master_ip' style={{ width: '20%' }}/>)}\n                                </FormItem>\n                                <FormItem  label='des_master_port'>\n                                    {getFieldDecorator('des_master_port', {rules: [{required: true, message: '请输入des_master_port'}],})(\n                                        <Input placeholder='请输入des_master_port:' style={{ width: '20%' }}/>)}\n                                </FormItem>\n                            </Card>\n                            <Button type=\"primary\" htmlType=\"submit\">同步</Button>\n                        </Row>\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\nMigrateCommonUser = Form.create()(MigrateCommonUser);\n","import React,{Component} from 'react';\nimport axios from 'axios'\nimport {Button,Table, Input,Modal,Form,Row,Tabs,Card} from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport CreateCommonUser from \"./createCommonUser\";\nimport MigrateCommonUser from \"./migrateCommonUser\";\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\nconst server = 'http://127.0.0.1:8000';\nconst FormItem = Form.Item;\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nclass commonUser extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            des_name: \"\",\n            user_info:[],\n            showDataVisible: false,\n            showMigrateAccountDataVisible:false,\n            confirmLoading: false,\n        }\n    }\n\n    //预览添加用户数据 modal返回按钮\n    showDataHandleCancel = (e) => {\n        this.setState({\n            showDataVisible: false,\n        });\n    };\n\n    //预览同步账户数据 modal返回按钮\n    showMigrateAccountModalHandleCancel = (e) => {\n        this.setState({\n            showMigrateAccountDataVisible: false,\n        });\n    };\n\n    componentDidMount() {\n        this.GetUserInfo()\n    }\n    //获取所有公用账户信息\n    async GetUserInfo() {\n        let res = await axios.get(`${server}/get_user_info/`);\n        console.log(res.data);\n        this.setState({\n            user_info: res.data\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            let params = {\n              grant_user_name: values[\"User_name\"],\n              grant_user_host: values[\"Host\"],\n              grant_database: values[\"Database\"],\n              grant_table: values[\"Table\"],\n              grant_privileges: values[\"Privileges\"],\n            };\n            let res = axios.post(`${server}/grant_user_info/`,{params});\n            this.setState({\n                showDataVisible: false\n            })\n        });\n    };\n\n\n    //模糊搜索\n    async GetSearchUserInfo(user_name) {\n        let res = await axios.post(`${server}/get_user_info/`,{user_name});\n        console.log(res.data);\n        this.setState({\n            user_info: res.data\n        })\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        let {user_info} = this.state;\n        const temp = {}; // 当前重复的值,支持多列\n        const mergeCells = (text, array, columns) => {\n          let i = 0;\n          if (text !== temp[columns]) {\n            temp[columns] = text;\n            array.forEach((item) => {\n              if (item.user_name === temp[columns]) {\n                i += 1;\n              }\n            });\n          }\n          return i;\n        };\n\n        const columns = [\n          {\n            title: 'user_name',\n            dataIndex: 'user_name',\n            width: 100,\n            key: 'user_name',\n            render: (text, record) => {\n              const obj = {\n                children: text,\n                props: {},\n              };\n              obj.props.rowSpan = mergeCells(record.user_name, user_info, 'user_name');\n              return obj;\n            },\n          },\n          {\n            title: 'user_password',\n            dataIndex: 'user_password',\n            width: 100\n          },\n          {\n            title: 'user_host',\n            dataIndex: 'user_host',\n            width: 100\n\n          },\n          {\n            title: 'privileges',\n            dataIndex: 'privileges',\n            width: 200\n          },\n          {\n            title: 'db_name',\n            dataIndex: 'db_name',\n            width: 100\n          },\n          {\n            title: 'tb_name',\n            dataIndex: 'tb_name',\n            width: 100\n          },\n          {\n            title: 'status',\n            dataIndex: 'status',\n            width: 100,\n          },\n\n        ];\n\n\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/commonUser\">\n                            公共账号信息\n                        </Link>\n                    </div>\n                    <div>\n                        <Search\n                          placeholder=\"用户名\"\n                          onSearch={value => this.GetSearchUserInfo(value)}\n                          style={{ width: 200 }}\n                          allowClear\n                        />\n                    </div>\n                </div>\n                <div>\n                        <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                            <TabPane tab=\"公共账号列表\" key=\"1\">\n                                <Table columns={columns} dataSource={this.state.user_info} pagination={{ pageSize: 10 }} scroll={{ y: 400 }} size=\"small\" />\n                            </TabPane>\n                            <TabPane tab=\"添加公共账号\" key=\"2\">\n                                <CreateCommonUser></CreateCommonUser>\n                            </TabPane>\n                            <TabPane tab=\"同步公共账号\" key=\"3\">\n                                <MigrateCommonUser></MigrateCommonUser>\n                            </TabPane>\n                        </Tabs>\n                </div>\n                    <Modal\n                        title=\"添加公共账号\"\n                        visible={this.state.showDataVisible}\n                        //onOk={this.handleSqlSubmit.bind(this)}\n                        onCancel={this.showDataHandleCancel}\n                        width='960px'\n                        footer={false}\n                    >\n                        <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleSubmit}>\n                            <Row gutter={20}>\n                                <Card>\n                                    <FormItem  label='User_name'>\n                                        {getFieldDecorator('User_name', {rules: [{required: true, message: '请输入User_name'}],})\n                                        (<Input style={{ width: '20%' }} placeholder='请输入User_name'/>)}\n                                    </FormItem>\n                                    <FormItem  label='Host'>\n                                        {getFieldDecorator('Host', {rules: [{required: true, message: '请输入Host'}],})\n                                        (<Input style={{ width: '20%' }} placeholder='请输入Host'/>)}\n                                    </FormItem>\n                                    <FormItem  label='Database'>\n                                        {getFieldDecorator('Database', {rules: [{required: true, message: '请输入需要授权的Database'}]})\n                                        (<Input style={{ width: '20%' }} placeholder='请输入需要授权的Database'/>)}\n                                    </FormItem>\n                                    <FormItem  label='Table'>\n                                        {getFieldDecorator('Table', {rules: [{required: true, message: '请输入需要授权的Table'}]})\n                                        (<Input style={{ width: '20%' }} placeholder='请输入需要授权的Table'/>)}\n                                    </FormItem>\n                                    <FormItem  label='Privileges'>\n                                        {getFieldDecorator('Privileges', {rules: [{required: true, message: '请输入需要申请的Privileges'}],})\n                                        (<Input style={{ width: '50%' }} placeholder='请输入需要申请的Privileges'/>)}\n                                    </FormItem>\n                                </Card>\n                                <Button type=\"primary\" htmlType=\"submit\">submit</Button>\n                            </Row>\n                        </Form>\n                    </Modal>\n                    <Modal\n                        title=\"同步公共账号\"\n                        visible={this.state.showMigrateAccountDataVisible}\n                        //onOk={this.handleSqlSubmit.bind(this)}\n                        onCancel={this.showMigrateAccountModalHandleCancel}\n                        width='960px'\n                        footer={false}\n                    >\n                        <Form className=\"ant-advanced-search-form\" labelCol={{ span: 4 }} onSubmit={this.handleMigrateSubmit}>\n                            <Row gutter={24}>\n                                <Card>\n                                    <FormItem  label='des_master_ip'>\n                                        {getFieldDecorator('des_master_ip', {rules: [{required: true, message: '请输入des_master_ip'}],})(\n                                            <Input placeholder='请输入des_master_ip'/>)}\n                                    </FormItem>\n                                    <FormItem  label='des_master_port'>\n                                        {getFieldDecorator('des_master_port', {rules: [{required: true, message: '请输入des_master_port'}],})(\n                                            <Input placeholder='请输入des_master_port:'/>)}\n                                    </FormItem>\n                                </Card>\n                                <Button type=\"primary\" htmlType=\"submit\">同步</Button>\n                            </Row>\n                        </Form>\n                    </Modal>\n            </div>\n        )\n    }\n}\nexport default Form.create()(commonUser);\n","import React,{Component} from 'react';\nimport axios from 'axios'\nimport { Button,Table, Input } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\nconst server = 'http://127.0.0.1:8000';\n\n\nexport default class CloudInstance extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloud_instance_info:[],\n        }\n    }\n\n    componentDidMount() {\n        this.GetClusterInfo()\n    }\n    //获取所有集群信息\n    async GetClusterInfo() {\n        let res = await axios.get(`${server}/get_cloud_info/`);\n        console.log(res.data);\n        this.setState({\n            cloud_instance_info: res.data\n        })\n    }\n    //模糊搜索\n    async GetSearchClusterInfo(instance_name) {\n        let res = await axios.post(`${server}/get_cloud_info/`,{instance_name});\n        console.log(res.data);\n        this.setState({\n            cloud_instance_info: res.data\n        })\n    }\n\n    render() {\n        const columns = [\n          {\n            title: '主机名',\n            dataIndex: 'server_hostname',\n            key: 'server_hostname',\n          },\n          {\n              title: '公网ip',\n              colSpan: 1,\n              dataIndex: 'server_public_ip',\n          },\n          {\n                title: '内网ip',\n                colSpan: 1,\n                dataIndex: 'server_private_ip',\n            },\n            {\n                title: '网络类型',\n                colSpan: 1,\n                dataIndex: 'network_type',\n            },\n            {\n                title: '公网带宽(Mbps)',\n                colSpan: 1,\n                dataIndex: 'public_network_bandwidth',\n            },\n            {\n                title: '内网带宽(Mbps)',\n                colSpan: 1,\n                dataIndex: 'private_network_bandwidth',\n            },\n          {\n              title: '内存(G)',\n              colSpan: 1,\n              dataIndex: 'memory',\n          },\n          {\n              title: '磁盘容量(G)',\n              colSpan: 1,\n              dataIndex: 'disk_capacity',\n          },\n         {\n             title: '磁盘类型',\n             colSpan: 1,\n             dataIndex: 'disk_type',\n         },\n          {\n            title: 'cpu(核数)',\n            colSpan: 1,\n            dataIndex: 'cpu_size',\n          },\n          {\n            title: '操作系统',\n            dataIndex: 'server_os',\n          },\n          {\n              title: '类型',\n              colSpan: 1,\n              dataIndex: 'server_type',\n          },\n          {\n              title: '用途',\n              colSpan: 1,\n              dataIndex: 'server_usage',\n          },\n          {\n              title: '是否可用',\n              colSpan: 1,\n              dataIndex: 'status',\n          },\n          {\n            title: '到期时间',\n            dataIndex: 'deadline',\n          }\n\n        ];\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/CloudInstance\">\n                            云主机信息\n                        </Link>\n                    </div>\n                    <div>\n                        <Button type=\"primary\" onClick={() => {\n                            this.GetClusterInfo()\n                        }}>置空</Button>\n                        <Search\n                          placeholder=\"实例名\"\n                          onSearch={value => this.GetSearchClusterInfo(value)}\n                          style={{ width: 200 }}\n                        />\n                    </div>\n                </div>\n            <div>\n            </div>\n                <Table\n                    dataSource={this.state.cloud_instance_info}\n                    columns={columns}\n                    bordered\n                    size=\"small\"\n                />\n            </div>\n        )\n    }\n}","import {Button, Form, Icon, Input, message} from \"antd\";\nimport React, {Component, } from \"react\";\nimport axios from \"axios\";\nimport {backendServerApiRoot} from \"../common/util\";\n\n// 登陆\nclass Login extends Component  {\n    // constructor(props) {\n    //     super(props);\n    // }\n    // 点击Login提交\n    handleLoginSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            console.log('Received values of form: ', values);\n            this.login(values[\"username\"],values[\"password\"]);\n        });\n    };\n    // 登陆验证\n    async login(username, password) {\n        axios.post(`${backendServerApiRoot}/auth/`, {username, password}).then(function(res){\n            console.log(res)\n            window.localStorage.setItem('token', res.data.token)\n            window.location.reload()\n        }).catch(function (error) {\n            message.error(\"登陆失败\")\n            console.log(error)\n        })\n    }\n\n    render() {\n        const { form } = this.props;\n        const { getFieldDecorator } = form;\n        return (\n            <div>\n                <Form onSubmit={this.handleLoginSubmit} className=\"login-form\">\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{ required: true, message: 'Please input your username!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: 'Please input your Password!' }],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            className=\"login-form-button\"\n                        >\n                            Log in\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\nexport default Form.create()(Login);","import React,{Component} from 'react';\nimport axios from 'axios'\nimport { Table, Input,Badge } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport \"../../styles/index.scss\"\nimport {backendServerApiRoot} from \"../common/util\"\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst { Search } = Input;\n\n\nexport default class mysqlInstance extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mysql_instance_info:[],\n        }\n    }\n\n    componentDidMount() {\n        this.GetMysqlInstanceInfo()\n    }\n    //获取所有mysql实例信息\n    async GetMysqlInstanceInfo() {\n        let res = await axios.get(`${backendServerApiRoot}/get_mysql_instance_info/`);\n        console.log(res.data);\n        console.log(window && window.location && window.location.hostname);\n        this.setState({\n            mysql_instance_info: res.data.data\n        })\n    }\n    //模糊搜索\n    async GetSearchMysqlInstanceInfo(host_name) {\n        this.setState({\n            mysql_instance_info: []\n        })\n        let res = await axios.post(`${backendServerApiRoot}/get_search_mysql_instance_info/`,{host_name});\n        console.log(res.data);\n        this.setState({\n            mysql_instance_info: res.data.data\n        })\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '主机名',\n                dataIndex: 'host_name',\n            },\n            {\n                title: 'host_ip',\n                dataIndex: 'host_ip',\n            },\n            {\n                title: 'port',\n                dataIndex: 'port',\n            },\n            {\n                title: 'server_charset',\n                dataIndex: 'server_charset',\n            },\n            {\n                title: 'version',\n                dataIndex: 'version',\n            },\n            {\n                title: 'bufferpool',\n                dataIndex: 'bufferpool',\n            },\n            {\n                title: 'instance_status',\n                dataIndex: 'instance_status',\n                render:(val) => {\n                    return <span>{val===\"正常服务\" ? <Badge status=\"success\"/>:<Badge status=\"error\"/>}{val}</span>\n                }\n            },\n            {\n                title: 'read_only',\n                dataIndex: 'read_only',\n            },\n            {\n                title: 'master_ip',\n                dataIndex: 'master_ip',\n            },\n            {\n                title: 'master_port',\n                dataIndex: 'master_port',\n            },\n        ];\n        return (\n            <div className=\"server-list\">\n                <div className=\"sub-title\">\n                    <div>\n                        <Link className=\"title-text\" to=\"/\">\n                            Home\n                        </Link>\n                        >>\n                        <Link className=\"title-text\" to=\"/mysqlInstance\">\n                            实例信息\n                        </Link>\n                    </div>\n                    <div>\n                        <Search\n                            placeholder=\"主机名\"\n                            onSearch={value => this.GetSearchMysqlInstanceInfo(value)}\n                            style={{ width: 200 }}\n                            allowClear\n                        />\n                    </div>\n                </div>\n                <div>\n                </div>\n                <Table\n                    dataSource={this.state.mysql_instance_info}\n                    columns={columns}\n                    bordered\n                    size=\"small\"\n                />\n            </div>\n        )\n    }\n}","import React,{Component} from 'react';\nimport axios from 'axios'\nimport {Layout, Menu, Icon, Button } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport {HashRouter,Route} from 'react-router-dom';\nimport mysqlCluster from './scripts/mysql/mysqlCluster'\nimport AuditSqlIndex from './scripts/auditSql/auditSqlIndex'\nimport ExecuteSql from './scripts/auditSql/executeSql'\nimport publicManage from \"./scripts/publicUserManage/pubicUserPrivilegeManage\"\nimport privilegesApply from \"./scripts/privilegesApply/userGrant\";\nimport OrderInformation from './scripts/privilegesApply/orderInformation'\nimport commonUser from \"./scripts/commonUser/commonUserCharge\";\nimport Cloud from \"./scripts/Cloud/CloudInstance\";\nimport Login from \"./scripts/login/login\"\nimport {getUser} from './scripts/common/util'\nimport mysqlInstance from './scripts/mysql/mysqlInstance'\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\naxios.defaults.withCredentials = true;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Authorization'] = window.localStorage.getItem('token') ;\n\nfunction LoginOut(){\n    console.log(\"退出登陆\");\n    window.localStorage.removeItem(\"token\")\n    window.location.reload()\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login_user_name:\"\",\n            login_user_name_role:\"\"\n        }\n    }\n    componentDidMount() {\n        console.log(\"Token:\",window.localStorage.getItem('token'))\n        getUser().then(res => {\n            this.setState({\n                login_user_name: res.data.username,\n                login_user_name_role: res.data.title\n            })\n        }).catch(error=>{\n            console.log(error)\n        })\n    }\n\n    render() {\n        if (window.localStorage.getItem('token')) {\n            return(\n                <div className=\"App\">\n                    <HashRouter>\n                        <Layout>\n                            <Header className=\"header\">\n                                <div onClick={() => window.location.href = `/page`}>{this.state.login_user_name_role}</div>\n                                <div>\n                                    <span>\n                                        {this.state.login_user_name}\n                                    </span>\n                                    <Button\n                                        icon=\"poweroff\"\n                                        type=\"default\"\n                                        style={{marginLeft: 5}}\n                                        onClick={LoginOut}\n                                    >\n                                        注销\n                                    </Button>\n                                </div>\n                            </Header>\n                            <Layout>\n                                <Sider width={200} style={{ background: '#fff' }}>\n                                    <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']} style={{ height: '100%' }}>\n                                        <SubMenu key=\"sub1\" title={<span><Icon type=\"cloud-server\" />server</span>}>\n                                            <Menu.Item key=\"1\">\n                                                <Link to=\"/Cloud\">主机</Link>\n                                            </Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub2\" title={<span><Icon type=\"database\" />MySQL</span>}>\n                                            <Menu.Item key=\"1\">\n                                                <Link to=\"#\">主机</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"2\">\n                                                <Link to=\"/mysqlInstance\">实例</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"3\">\n                                                <Link to=\"/mysqlCluster\">集群</Link >\n                                            </Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub3\" title={<span><Icon type=\"database\" />Redis</span>}>\n                                            <Menu.Item key=\"1\">\n                                                <Link to=\"/redisServer\">主机</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"2\">\n                                                <Link to=\"/redisInstance\">实例</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"3\">\n                                                <Link to=\"/redisCluster\">集群</Link>\n                                            </Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub4\" title={<span><Icon type=\"laptop\" />工单</span>}>\n                                            <Menu.Item key=\"1\">\n                                                <Link to=\"/auditSqlIndex\">SQL审核</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"2\">\n                                                <Link to=\"/privilegesApply\">权限申请</Link>\n                                            </Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub5\" title={<span><Icon type=\"code\" />控制台</span>}>\n                                            <Menu.Item key=\"1\">MySQL</Menu.Item>\n                                            <Menu.Item key=\"2\">Redis</Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub6\" title={<span><Icon type=\"cloud-download\" />数据迁移/导出</span>}>\n                                            <Menu.Item key=\"1\">迁移</Menu.Item>\n                                            <Menu.Item key=\"2\">导出</Menu.Item>\n                                        </SubMenu>\n                                        <SubMenu key=\"sub7\" title={<span><Icon type=\"robot\" />自助服务</span>}>\n                                            <Menu.Item key=\"1\">\n                                                <Link to=\"/commonUser\">公共账号管理</Link>\n                                            </Menu.Item>\n                                            <Menu.Item key=\"2\">备份</Menu.Item>\n                                            <Menu.Item key=\"3\">归档</Menu.Item>\n                                            <Menu.Item key=\"4\">\n                                                <Link to=\"/home\">主页</Link>\n                                            </Menu.Item>\n                                        </SubMenu>\n                                    </Menu>\n                                </Sider>\n                                <Content>\n                                    <Route exact path=\"/\" component={() => {\n                                        if (this.state.is_dba) {\n                                            return <Cloud/>\n                                        } else {\n                                            return <Cloud/>\n                                        }\n                                    }}/>\n                                    <Route exact path=\"/Cloud\" component={Cloud} />\n                                    <Route exact path=\"/mysqlCluster\" component={mysqlCluster} />\n                                    <Route exact path=\"/mysqlInstance\" component={mysqlInstance} />\n                                    <Route exact path=\"/publicManage\" component={publicManage} />\n                                    <Route exact path=\"/auditSqlIndex\" component={AuditSqlIndex} />\n                                    <Route exact path=\"/viewApplySqlByUuid/:submit_sql_uuid\" component={ExecuteSql} />\n                                    <Route exact path=\"/privilegesApply\" component={privilegesApply} />\n                                    <Route exact path=\"/viewPrivilegeInfoByUuid/:order_uuid\" component={OrderInformation} />\n                                    <Route exact path=\"/commonUser\" component={commonUser} />\n                                    <Route exact path=\"/home\" component={Login} />\n                                </Content>\n                            </Layout>\n                            <Footer style={{ textAlign: 'center' }}>Devpos Design ©2020 Created By Me</Footer>\n                        </Layout>\n                    </HashRouter>\n                </div>\n            )\n        }else{\n            return (\n                <div>\n                    <Layout className=\"layout\">\n                        <Header className=\"header\">\n                            <span>请先登陆</span>\n                        </Header>\n                        <Content style={{ margin: '0 auto',padding:'50px 50px' }}>\n                            <Login></Login>\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>Devpos Design ©2020 Created By Me</Footer>\n                    </Layout>,\n                </div>\n            )\n        }\n    }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}